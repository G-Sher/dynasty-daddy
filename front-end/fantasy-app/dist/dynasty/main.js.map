{"version":3,"sources":["./src/app/components/draft/completed-draft-table/completed-draft-table.component.ts","./src/app/components/draft/completed-draft-table/completed-draft-table.component.html","./src/app/components/services/mock-draft.service.ts","./src/app/components/player-values/ktc-table/ktc-table.component.ts","./src/app/components/player-values/ktc-table/ktc-table.component.html","./src/app/components/model/matchup.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/playoff-calculator/weekly-record-vs-all/weekly-record-vs-all.component.ts","./src/app/components/playoff-calculator/weekly-record-vs-all/weekly-record-vs-all.component.html","./src/app/components/fantasy-team-details/fantasy-team-details-weekly-points-chart/fantasy-team-details-weekly-points-chart.component.ts","./src/app/components/fantasy-team-details/fantasy-team-details-weekly-points-chart/fantasy-team-details-weekly-points-chart.component.html","./src/app/model/SleeperUser.ts","./src/environments/environment.ts","./src/app/services/api/ktc-api.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/init/config.service.ts","./src/app/components/player-details/player-details-weekly-stats-line-chart/player-details-weekly-stats-line-chart.component.ts","./src/app/components/player-details/player-details-weekly-stats-line-chart/player-details-weekly-stats-line-chart.component.html","./src/app/services/endpoints.service.ts","./src/app/components/services/player-comparison.service.ts","./src/app/services/api/sleeper/sleeper-api.service.ts","./src/app/components/player-details/player-details.component.ts","./src/app/components/player-details/player-details.component.html","./src/app/services/init/startup.service.ts","./src/app/services/api/ktc-api-config.service.ts","./src/app/services/player.service.ts","./src/app/components/services/playoff-calculator.service.ts","./src/app/components/power-rankings/power-rankings-table/power-rankings-table.component.ts","./src/app/components/power-rankings/power-rankings-table/power-rankings-table.component.html","./src/app/components/draft/draft-table/draft-table.component.ts","./src/app/components/draft/draft-table/draft-table.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/components/playoff-calculator/schedule-comparison/schedule-comparison.component.ts","./src/app/components/playoff-calculator/schedule-comparison/schedule-comparison.component.html","./src/app/components/power-rankings/power-rankings-chart/power-rankings-chart.component.ts","./src/app/components/power-rankings/power-rankings-chart/power-rankings-chart.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/services/power-rankings.service.ts","./src/app/components/player-comparisons/trade-value-line-chart/trade-value-line-chart.component.ts","./src/app/components/player-comparisons/trade-value-line-chart/trade-value-line-chart.component.html","./src/app/components/base-component.abstract.ts","./src/app/app.module.ts","./src/app/components/model/mockDraft.ts","./src/app/components/model/playoffCalculator.ts","./src/app/components/playoff-calculator/playoff-calculator.component.html","./src/app/components/playoff-calculator/playoff-calculator.component.ts","./src/app/components/player-comparisons/player-comparisons.component.ts","./src/app/components/player-comparisons/player-comparisons.component.html","./src/app/services/sleeper.service.ts","./src/app/services/api/sleeper/sleeper-api-config.service.ts","./src/app/components/services/matchup.service.ts","./src/app/components/draft/draft.component.ts","./src/app/components/draft/draft.component.html","./src/app/components/power-rankings/power-rankings.component.ts","./src/app/components/power-rankings/power-rankings.component.html","./src/app/app-routing.module.ts","./src/app/components/modals/add-player-comparison-modal/add-player-comparison-modal.component.ts","./src/app/components/modals/add-player-comparison-modal/add-player-comparison-modal.component.html","./src/app/components/fantasy-team-details/fantasy-team-details.component.html","./src/app/components/fantasy-team-details/fantasy-team-details.component.ts","./src/app/components/player-details/player-details-weekly-box-scores-table/player-details-weekly-box-scores-table.component.ts","./src/app/components/player-details/player-details-weekly-box-scores-table/player-details-weekly-box-scores-table.component.html","./src/app/model/SleeperLeague.ts","./src/app/components/player-values/player-values.component.ts","./src/app/components/player-values/player-values.component.html","./src/app/components/model/powerRankings.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit, ViewChild, Input, OnChanges} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {SleeperCompletedPickData} from '../../../model/SleeperLeague';\nimport {CompletedDraft} from '../../../model/SleeperUser';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {SleeperService} from '../../../services/sleeper.service';\nimport {PlayerService} from '../../../services/player.service';\n\n@Component({\n  selector: 'app-completed-draft-table',\n  templateUrl: './completed-draft-table.component.html',\n  styleUrls: ['./completed-draft-table.component.css']\n})\nexport class CompletedDraftTableComponent implements OnInit, OnChanges {\n\n  @Input()\n  selectedDraft: CompletedDraft;\n\n  displayedColumns = ['pickNumber', 'team', 'owner', 'selectedPlayer'];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  pageLength: number;\n\n  dataSource: MatTableDataSource<SleeperCompletedPickData> = new MatTableDataSource<SleeperCompletedPickData>();\n\n  constructor(private sleeperService: SleeperService, public playerService: PlayerService) { }\n\n  ngOnInit(): void {\n    this.pageLength = this.sleeperService.selectedLeague.totalRosters;\n  }\n\n  ngOnChanges() {\n    this.dataSource = new MatTableDataSource(this.selectedDraft.picks);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getTeamName(rosterId: string): string {\n    for (let team of this.sleeperService.sleeperTeamDetails) {\n      if (team.roster.rosterId == rosterId) {\n        return team.owner.teamName\n      }\n    }\n    return 'none'\n  }\n\n  getOwnerName(rosterId: string) {\n    for (let team of this.sleeperService.sleeperTeamDetails) {\n      if (team.roster.rosterId == rosterId) {\n        return team.owner.ownerName\n      }\n    }\n    return 'none'\n  }\n\n  getPlayerBySleeperId(sleeperId: string) {\n    return this.playerService.getPlayerBySleeperId(sleeperId);\n  }\n}\n","<div class=\"table-container margin-top-10 mat-elevation-z8\">\n  <div class=\"center-text mid-bold-text\">\n    Completed Draft: {{selectedDraft.draft.rounds}} Rounds\n  </div>\n  <div class=\"small-text__light margin-top-10 center-text\">\n    *Traded past picks are currently not updating properly\n  </div>\n  <mat-table [dataSource]=\"dataSource\" class=\"margin-top-10\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"pickNumber\">\n      <mat-header-cell *matHeaderCellDef>Pick</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.pickNumber}}</mat-cell>\n    </ng-container>\n\n    <!-- Pos Column -->\n    <ng-container matColumnDef=\"team\">\n      <mat-header-cell *matHeaderCellDef>Team</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{getTeamName(element.rosterId)}}</mat-cell>\n    </ng-container>\n\n    <!-- Age Column -->\n    <ng-container matColumnDef=\"owner\">\n      <mat-header-cell *matHeaderCellDef>Owner</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{getOwnerName(element.rosterId)}}</mat-cell>\n    </ng-container>\n\n    <!-- Value Column -->\n    <ng-container matColumnDef=\"selectedPlayer\">\n      <mat-header-cell *matHeaderCellDef>Selected Pick (current value)</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.position + ' ' + element.firstName + ' ' + element.lastName}} - {{sleeperService.selectedLeague.isSuperflex ? getPlayerBySleeperId(element.sleeperId)?.sf_trade_value || 'None' : getPlayerBySleeperId(element.sleeperId)?.trade_value || 'None'}}\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'accent__color__background': sleeperService.sleeperUser.userData.username === getOwnerName(row.rosterId)}\"></mat-row>\n  </mat-table>\n  <mat-paginator [pageSizeOptions]=\"[pageLength, 2 * pageLength, 4 * pageLength]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {KTCPlayer} from '../../model/KTCPlayer';\r\nimport {TeamMockDraftPick} from '../model/mockDraft';\r\nimport {SleeperTeam} from '../../model/SleeperLeague';\r\nimport {DraftCapital, SleeperLeagueData} from '../../model/SleeperUser';\r\nimport {TeamPowerRanking} from '../model/powerRankings';\r\nimport {SleeperService} from '../../services/sleeper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MockDraftService {\r\n\r\n  teamPicks: TeamMockDraftPick[] = [];\r\n\r\n  selectablePlayers: KTCPlayer[] = [];\r\n\r\n  // picks: KTCPlayer[] = [];\r\n\r\n  constructor(private sleeperService: SleeperService) {\r\n  }\r\n\r\n  generateDraft(players: KTCPlayer[], isSuperFlex: boolean = true, playerType: number = 1) {\r\n    if(playerType === 1) { // rookies only\r\n      this.selectablePlayers = players.filter(player => {\r\n        return player.experience === 0 && player.position != 'PI';\r\n      })\r\n    } else if (playerType === 2) { // vets only\r\n      this.selectablePlayers = players.filter(player => {\r\n        return player.experience !== 0 && player.position != 'PI';\r\n      })\r\n    } else { // all players\r\n      this.selectablePlayers = players.filter(player => {\r\n        return player.position != 'PI';\r\n      })\r\n    }\r\n    this.selectablePlayers.sort((playerA, playerB) => {\r\n      if(this.sleeperService.selectedLeague.isSuperflex){\r\n        return playerB.sf_trade_value - playerA.sf_trade_value;\r\n      } else {\r\n        return playerB.trade_value - playerA.trade_value;\r\n      }\r\n    })\r\n\r\n    // this.picks = players.filter(player => {\r\n    //   return player.position === 'PI';\r\n    // })\r\n  }\r\n\r\n  mapDraftObjects(teams: SleeperTeam[]) {\r\n    if(this.teamPicks.length === 0) {\r\n      teams.map(team => {\r\n        for(const pick of team.draftCapital) {\r\n          this.teamPicks.push(new TeamMockDraftPick(((pick.round-1) * 12) + pick.pick, this.createPickString(pick), team.owner.ownerName, team.owner.teamName))\r\n        }\r\n      })\r\n      this.teamPicks.sort((pickA, pickB) => {\r\n        return pickA.pick - pickB.pick;\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  private createPickString(pick: DraftCapital) {\r\n    return pick.round.toString() + '.' + (pick.pick > 9 ? pick.pick.toString() : '0' + pick.pick.toString());\r\n  }\r\n\r\n  /**\r\n   * reset variables when league is changed\r\n   */\r\n  reset() {\r\n    this.teamPicks = [];\r\n    this.selectablePlayers = [];\r\n    // this.picks = [];\r\n  }\r\n}\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {KTCPlayer} from '../../../model/KTCPlayer';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {SleeperService} from '../../../services/sleeper.service';\nimport {PlayerService} from '../../../services/player.service';\nimport {PlayerComparisonService} from '../../services/player-comparison.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-ktc-table',\n  templateUrl: './ktc-table.component.html',\n  styleUrls: ['./ktc-table.component.css']\n})\nexport class KtcTableComponent implements OnInit {\n\n  @Input()\n  players: KTCPlayer[];\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  filteredPlayers: KTCPlayer[];\n\n  filterPosGroup: boolean[] = [true, true, true, true, true];\n\n  displayedColumns: string[] = [];\n\n  /** is superflex or normal value */\n  isSuperFlex: boolean;\n\n  /** mat table datasource */\n  dataSource: MatTableDataSource<KTCPlayer> = new MatTableDataSource<KTCPlayer>();\n\n  /** show rookies in table */\n  showRookies: boolean = false;\n\n  searchVal: string;\n\n  constructor(public sleeperService: SleeperService, public playerService: PlayerService, private playerComparisonService: PlayerComparisonService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.isSuperFlex = this.sleeperService?.selectedLeague?.isSuperflex != undefined ? this.sleeperService?.selectedLeague?.isSuperflex  : true;\n    // this.displayedColumns = ['full_name', 'position', 'age', 'halfppr', 'valueRatio', this.isSuperFlex ? 'sf_trade_value' : 'trade_value', 'actions'];\n    this.filteredPlayers = this.players.slice(0);\n    this.dataSource = new MatTableDataSource(this.filteredPlayers);\n    this.dataSource.sortingDataAccessor= (item, property) => {\n      switch(property) {\n        case 'halfppr': return this.playerService.playerStats[item.sleeper_id]?.pts_half_ppr;\n        case 'valueRatio': return this.getValueRatio(item);\n        default: return item[property]\n      }\n    };\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.updateSuperFlex();\n  }\n\n  updatePlayerFilters() {\n    this.filteredPlayers = this.players.slice(0);\n    const filterOptions = ['QB', 'RB', 'WR', 'TE', 'PI'];\n    if(this.showRookies){\n      this.filteredPlayers = this.filteredPlayers.filter(player => {\n        if (player.experience === 0 && player.position !== 'PI') {\n          return player;\n        }\n      });\n    }\n    for (let i = 0; i < this.filterPosGroup.length; i++) {\n      if (!this.filterPosGroup[i]) {\n        this.filteredPlayers = this.filteredPlayers.filter(player => {\n          if (player.position !== filterOptions[i]) {\n            return player;\n          }\n        });\n      }\n    }\n    if(this.searchVal && this.searchVal.length > 0){\n      this.filteredPlayers = this.filteredPlayers.filter(player => {\n        return (player.full_name.toLowerCase().indexOf(this.searchVal.toLowerCase()) >= 0 || player.age?.toString().indexOf(this.searchVal) >= 0 || ((player.owner?.toLowerCase().indexOf(this.searchVal.toLowerCase()) >= 0) && this.sleeperService.selectedLeague))\n      })\n    }\n    this.dataSource.data = this.filteredPlayers;\n  }\n\n  updateSuperFlex() {\n    this.displayedColumns = [];\n    if(this.sleeperService.selectedLeague) {\n      this.displayedColumns = ['full_name', 'position', 'age', 'owner', 'halfppr', this.isSuperFlex ? 'sf_trade_value' : 'trade_value', 'actions'];\n    } else {\n      this.displayedColumns = ['full_name', 'position', 'age', 'halfppr', this.isSuperFlex ? 'sf_trade_value' : 'trade_value', 'actions'];\n    }\n    this.dataSource.data = this.filteredPlayers;\n    this.dataSource.sort.sort({\n      id: this.isSuperFlex ? 'sf_trade_value' : 'trade_value', // The column name specified for matColumnDef attribute\n      start: 'desc', // Can be 'asc', 'desc' or null,\n      disableClear: false\n    });\n  }\n\n  getValueRatio(player: KTCPlayer) {\n    return Math.round((this.isSuperFlex ? player.sf_trade_value : player.trade_value)/(this.playerService.playerStats[player.sleeper_id]?.pts_half_ppr/this.playerService.playerStats[player.sleeper_id]?.gp)) || '---';\n  }\n\n  openPlayerComparison(element) {\n    this.playerComparisonService.addPlayerToCharts(element);\n    this.router.navigateByUrl('players/comparison')\n  }\n}\n","<div class=\"table-container\">\n  <div>\n    <mat-form-field class=\"button-left player-value-checkbox-margin mat-dropdown-wide-300\">\n      <mat-label>Search Player</mat-label>\n      <input matInput type=\"text\" (keyup)=\"updatePlayerFilters()\" [(ngModel)]=\"searchVal\">\n    </mat-form-field>\n  </div>\n  <div>\n    <span class=\"button-left\">\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[0]\"\n                    (change)=\"updatePlayerFilters()\">QB</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[1]\"\n                    (change)=\"updatePlayerFilters()\">RB</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[2]\"\n                    (change)=\"updatePlayerFilters()\">WR</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[3]\"\n                    (change)=\"updatePlayerFilters()\">TE</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[4]\"\n                    (change)=\"updatePlayerFilters()\">Picks</mat-checkbox>\n    </span>\n    <span class=\"container_spacer\"></span>\n    <span class=\"button-right\">\n          <mat-slide-toggle color=\"primary\" [(ngModel)]=\"showRookies\" (change)=\"updatePlayerFilters()\" class=\"player-value-checkbox-margin\">\n      Rookies Only\n    </mat-slide-toggle>\n          <mat-slide-toggle color=\"primary\" [(ngModel)]=\"isSuperFlex\" (change)=\"updateSuperFlex()\"  class=\"player-value-checkbox-margin\" >\n      SuperFlex\n    </mat-slide-toggle>\n    </span>\n  </div>\n  <div class=\"margin-top-10 mat-elevation-z8\" [hidden]=\"filteredPlayers.length === 0\">\n    <mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"{{isSuperFlex ? 'sf_trade_value' : 'trade_value'}}\"\n               matSortDirection=\"desc\">\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"full_name\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.full_name}} <span\n          *ngIf=\"(element.experience === 0 && element.position !== 'PI')\" matBadge=\"R\" matBadgeOverlap=\"false\"></span>\n<!--          <span class=\"small-text__light\">{{element.team}}</span>-->\n        </mat-cell>\n      </ng-container>\n\n      <!-- Pos Column -->\n      <ng-container matColumnDef=\"position\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Position</mat-header-cell>\n        <mat-cell\n          *matCellDef=\"let element\"> {{element.position == 'PI' ? 'PICK' : element.position}} {{isSuperFlex ? element.sf_position_rank : element.position_rank}}</mat-cell>\n      </ng-container>\n\n      <!-- Age Column -->\n      <ng-container matColumnDef=\"age\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Age</mat-header-cell>\n        <mat-cell\n          *matCellDef=\"let element\"> {{(element.age == -1 || !element.age) ? '??' : element.age + ' y.o.'}} </mat-cell>\n      </ng-container>\n\n      <!-- Fantasy Points -->\n      <ng-container matColumnDef=\"halfppr\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>{{playerService.playerStatsYear}} Points</mat-header-cell>\n        <mat-cell\n          *matCellDef=\"let element\">{{playerService.playerStats[element.sleeper_id]?.pts_half_ppr || '---'}}</mat-cell>\n      </ng-container>\n\n      <!-- Fantasy Points -->\n<!--      <ng-container matColumnDef=\"valueRatio\">-->\n<!--        <mat-header-cell *matHeaderCellDef mat-sort-header>VPP Ratio <mat-icon style=\"font-size: 20px\" [matTooltip]=\"'Value Per Point Ratio = Value / (points/games play)'\" [matTooltipPosition]=\"'above'\">help_outline</mat-icon></mat-header-cell>-->\n<!--        <mat-cell-->\n<!--          *matCellDef=\"let element\">{{getValueRatio(element) || '-&#45;&#45;'}}</mat-cell>-->\n<!--      </ng-container>-->\n\n\n      <!-- Value Column -->\n      <ng-container matColumnDef=\"{{isSuperFlex ? 'sf_trade_value' : 'trade_value'}}\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Trade Value</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{isSuperFlex ? element.sf_trade_value : element.trade_value}} </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation();\">\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n          <mat-icon>more_horiz</mat-icon>\n        </button>\n          <mat-menu #menu=\"matMenu\">\n            <button *ngIf=\"element.position !== 'PI'\" mat-menu-item [routerLink]=\"['../details', element.name_id]\">\n              <span>View Player Page</span>\n            </button>\n            <button mat-menu-item (click)=\"openPlayerComparison(element)\">\n              <span>Add to Player Comparison</span>\n            </button>\n            <button mat-menu-item *ngIf=\"sleeperService.selectedLeague && element.position !== 'PI'\" [routerLink]=\"['../../league/team', element.owner]\">\n              <span>View Team Page</span>\n            </button>\n          </mat-menu>\n        </mat-cell>\n      </ng-container>\n\n          <ng-container *ngIf=\"sleeperService.selectedLeague\" matColumnDef=\"owner\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Owner</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">{{element.owner || '---'}}</mat-cell>\n          </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row class=\"ktc-table-element-row\" *matRowDef=\"let row; columns: displayedColumns;\"\n               [routerLink]=\"['../details', row.name_id]\"\n               [ngClass]=\"{'accent__color__background': sleeperService.sleeperUser?.userData?.username === row.owner?.toLowerCase() && sleeperService.selectedLeague}\"></mat-row>\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[25, 50, 100]\" showFirstLastButtons></mat-paginator>\n  </div>\n  <div class=\"mid-bold-text center-text warning__alert\" [hidden]=\"filteredPlayers.length > 0\">No results found. Try a different search.</div>\n</div>\n","export class ScheduleComp {\r\n  constructor(rosterId: number, record: {}) {\r\n    this.rosterId = rosterId\r\n    this.record = record\r\n  }\r\n\r\n  rosterId: number;\r\n  record: {};\r\n}\r\n\r\nexport class WeeklyRecordComp {\r\n  constructor(rosterId: number, records: {}, wins: number, loss: number, ties: number) {\r\n    this.rosterId = rosterId;\r\n    this.totalWins = wins;\r\n    this.totalLosses = loss;\r\n    this.totalTies = ties;\r\n    this.records = records;\r\n  }\r\n\r\n  rosterId: number;\r\n  totalWins: number;\r\n  totalLosses: number;\r\n  totalTies: number;\r\n  records: {};\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {SleeperLeagueData} from '../../model/SleeperUser';\nimport {BaseComponent} from '../base-component.abstract';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent extends BaseComponent implements OnInit {\n\n\n  constructor(public sleeperService: SleeperService) {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"app-header\">\n  <mat-toolbar color=\"primary\">\n    <button mat-button routerLink=\"./home\"><mat-icon class=\"header-icon\">home</mat-icon> Home</button>\n    <button mat-button [matMenuTriggerFor]=\"leagueMenu\"><mat-icon class=\"header-icon\">people</mat-icon> League</button>\n    <mat-menu #leagueMenu=\"matMenu\">\n      <button mat-menu-item routerLink=\"./league/rankings\">Power Rankings</button>\n      <button mat-menu-item routerLink=\"./league/playoff/calculator\">Standings</button>\n      <button mat-menu-item routerLink=\"./league/draft\">Draft Center</button>\n    </mat-menu>\n    <button mat-button [matMenuTriggerFor]=\"playerMenu\"><mat-icon style=\"font-size: 22px\">insights</mat-icon> Players</button>\n    <mat-menu #playerMenu=\"matMenu\">\n      <button mat-menu-item routerLink=\"./players/values\">Player Values</button>\n      <button mat-menu-item routerLink=\"./players/comparison\">Player Comparisons</button>\n    </mat-menu>\n    <span class=\"spacer\"></span>\n    <button mat-button routerLink=\"./home\"><mat-icon class=\"header-icon\">group_add</mat-icon> Change League</button>\n  </mat-toolbar>\n</div>\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {SleeperService} from '../../../services/sleeper.service';\nimport {MatchupService} from '../../services/matchup.service';\nimport { WeeklyRecordComp} from '../../model/matchup';\nimport {MatSort} from '@angular/material/sort';\n\n@Component({\n  selector: 'app-weekly-record-vs-all',\n  templateUrl: './weekly-record-vs-all.component.html',\n  styleUrls: ['./weekly-record-vs-all.component.css']\n})\nexport class WeeklyRecordVsAllComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  displayColumns: string[] = [];\n\n  dataSource: MatTableDataSource<WeeklyRecordComp> = new MatTableDataSource<WeeklyRecordComp>();\n\n  constructor(private sleeperService: SleeperService, private matchupService: MatchupService) { }\n\n  ngOnInit(): void {\n    this.displayColumns = this.generateCols();\n    this.dataSource = new MatTableDataSource(this.matchupService.weeklyComparison);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch(property) {\n        case 'total': return item.totalWins;\n        default: return item.records[property][0];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * generate col values\n   * @private\n   */\n  private generateCols() {\n    const list = ['teams'];\n    for(let i = this.sleeperService.selectedLeague.startWeek; i < this.sleeperService.selectedLeague.playoffStartWeek; i++){\n      list.push(i.toString());\n    }\n    list.push('total');\n    return list;\n  }\n\n  /**\n   * return record string to display\n   * @param element\n   * @param col\n   */\n  getRecord(element: WeeklyRecordComp, col: string): string {\n    return `${element.records[col][0]}-${element.records[col][1]}` + (element.records[col][2] > 0 ? `-${element.records[col][2]}` : '');\n  }\n\n  /**\n   * return total record string\n   * @param element\n   */\n  getTotalRecord(element) {\n    return `${element.totalWins}-${element.totalLosses}` + (element.totalTies > 0 ? `-${element.totalTies}` : '');\n  }\n}\n","<div *ngIf=\"displayColumns.length > 0\" class=\"margin-top-10 table-container\">\n  <mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"total\"\n             matSortDirection=\"desc\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"teams\">\n      <mat-header-cell *matHeaderCellDef>Teams</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{matchupService.getTeamName(element.rosterId, sleeperService.sleeperTeamDetails)}}</mat-cell>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let col of displayColumns.slice(1, displayColumns.length-1)\">\n      <ng-container [matColumnDef]=\"col\">\n        <mat-header-cell class=\"mat-table-center-text\" *matHeaderCellDef mat-sort-header>Week {{col}}</mat-header-cell>\n        <mat-cell class=\"mat-table-center-text\" *matCellDef=\"let element\" [ngClass]=\"{'disabled__color': element.records[col][0] === 0 && element.records[col][1] === 0}\" >{{getRecord(element, col)}}</mat-cell>\n      </ng-container>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Total Record</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{getTotalRecord(element)}}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayColumns;\"></mat-row>\n  </mat-table>\n</div>\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ChartDataSets, ChartOptions} from 'chart.js';\nimport {Label} from 'ng2-charts';\nimport 'chartjs-plugin-colorschemes/src/plugins/plugin.colorschemes';\nimport {Classic10} from 'chartjs-plugin-colorschemes/src/colorschemes/colorschemes.tableau';\nimport {MatchupService} from '../../services/matchup.service';\nimport {SleeperTeam} from '../../../model/SleeperLeague';\nimport {SleeperService} from '../../../services/sleeper.service';\n\n@Component({\n  selector: 'app-fantasy-team-details-weekly-points-chart',\n  templateUrl: './fantasy-team-details-weekly-points-chart.component.html',\n  styleUrls: ['./fantasy-team-details-weekly-points-chart.component.css']\n})\nexport class FantasyTeamDetailsWeeklyPointsChartComponent implements OnInit {\n\n  @Input()\n  selectedTeam: SleeperTeam;\n\n  /** line chart data*/\n  public lineChartData: ChartDataSets[] = [];\n\n  /** line chart labels*/\n  public lineChartLabels: Label[] = [];\n\n  public lineChartOptions: (ChartOptions & { annotation?: any }) = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      intersect: false,\n      mode: 'index',\n      position: 'nearest',\n      // custom: tooltipModel => {\n      //   multi\n      // }\n    },\n    scales: {\n      xAxes: [{\n        display: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'MatchUp',\n          fontColor: '#d3d3d3'\n        }\n      }],\n      yAxes: [{\n        display: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Fantasy Points',\n          fontColor: '#d3d3d3'\n        }\n      }],\n    },\n\n    plugins: {\n      colorschemes: {\n        scheme: Classic10,\n        override: true\n      }\n    }\n  };\n  public lineChartLegend = false;\n  public lineChartType = 'line';\n  public lineChartPlugins = [];\n\n  constructor(private sleeperService: SleeperService, private matchupService: MatchupService) { }\n\n  ngOnInit(): void {\n    this.createMatchupDataSets()\n    this.matchupService.initMatchUpCharts(this.sleeperService.selectedLeague)\n  }\n\n  createMatchupDataSets() {\n    const weeklyPoints = [];\n    const oppPoints = [];\n    const numOfWeeks = (Number(this.sleeperService.selectedYear) < 2021 ? 17 : 18);\n    for(let i = 0; i <= numOfWeeks; i++ ) {\n      const week = this.sleeperService.selectedLeague.leagueMatchUps[i];\n      if(week) {\n        for(let matchup of week) {\n          if(matchup.rosterId === this.selectedTeam.roster.rosterId) {\n            weeklyPoints[i] = matchup.points;\n            const matchId = matchup.matchupId;\n            for(let matchup of week) {\n              if(matchup.matchupId == matchId && matchup.rosterId !== this.selectedTeam.roster.rosterId) {\n                oppPoints[i] = matchup.points;\n                this.lineChartLabels.push('Week ' + i + ' vs. ' + this.sleeperService.getTeamByRosterId(matchup.rosterId).owner.teamName)\n                break;\n              }\n            }\n            break\n          }\n        }\n      }\n    }\n    this.lineChartData.push({label: this.selectedTeam.owner.teamName, data: weeklyPoints.slice(this.sleeperService.selectedLeague.startWeek)})\n    this.lineChartData.push({label: 'Opponent', data: oppPoints.slice(this.sleeperService.selectedLeague.startWeek)})\n  }\n\n}\n","<div class=\"margin-top-50\" style=\"display: block;\">\n  <canvas baseChart width=\"600\" height=\"400\"\n          [datasets]=\"lineChartData\"\n          [labels]=\"lineChartLabels\"\n          [options]=\"lineChartOptions\"\n          [legend]=\"lineChartLegend\"\n          [chartType]=\"lineChartType\"\n          [plugins]=\"lineChartPlugins\">\n  </canvas>\n</div>\n","import {SleeperCompletedPickData, SleeperRawDraftOrderData} from './SleeperLeague';\r\n\r\nexport class SleeperUserData {\r\n  username: string;\r\n  user_id: string;\r\n  avatar: string;\r\n}\r\n\r\nexport class CompletedDraft {\r\n  constructor(draft: SleeperRawDraftOrderData, picks: SleeperCompletedPickData[]) {\r\n    this.draft = draft;\r\n    this.picks = picks;\r\n  }\r\n\r\n  draft: SleeperRawDraftOrderData;\r\n  picks: SleeperCompletedPickData[]\r\n}\r\n\r\nexport class SleeperLeagueData {\r\n  constructor(b: boolean, name: string, league_id: string, total_rosters: number, roster_positions: string[], previous_league_id: string, status: string, metadata: any, settings: any) {\r\n    this.isSuperflex = b;\r\n    this.name = name;\r\n    this.leagueId = league_id;\r\n    this.totalRosters = total_rosters;\r\n    this.rosterPositions = roster_positions;\r\n    this.prevLeagueId = previous_league_id;\r\n    this.status = status;\r\n    this.divisions = settings.divisions;\r\n    for (let i = 0; i < this.divisions; i++) {\r\n      this.divisionNames.push( metadata ? metadata[`division_${i+1}`] : `Division ${i+1}`);\r\n    }\r\n    this.playoffTeams = settings.playoff_teams;\r\n    this.startWeek = settings.start_week;\r\n    this.playoffStartWeek = settings.playoff_week_start;\r\n  }\r\n\r\n  isSuperflex: boolean = true;\r\n  name: string;\r\n  leagueId: string;\r\n  totalRosters: number;\r\n  rosterPositions: string[];\r\n  prevLeagueId: string;\r\n  divisionNames: string[] = [];\r\n  divisions: number;\r\n  status: string;\r\n  playoffTeams: number;\r\n  startWeek: number;\r\n  playoffStartWeek: number;\r\n  leagueMatchUps: {};\r\n}\r\n\r\nexport class SleeperData {\r\n  userData: SleeperUserData;\r\n  leagues: SleeperLeagueData[];\r\n}\r\n\r\nexport class DraftCapital {\r\n  constructor(b: boolean, round: number, number: number, year: string) {\r\n    this.isFirstOwner = b;\r\n    this.round = round;\r\n    this.pick = number;\r\n    this.year = year;\r\n  }\r\n\r\n  isFirstOwner: boolean;\r\n  round: number;\r\n  pick: number;\r\n  year: string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\r\nimport {KTCPlayer} from '../../model/KTCPlayer';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {KTCApiConfigService} from './ktc-api-config.service';\r\nimport {Observable, of} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KTCApiService {\r\n\r\n  private playersList: KTCPlayer[];\r\n\r\n  constructor(private http: HttpClient, private ktcApiConfigService: KTCApiConfigService) {\r\n  }\r\n\r\n  getPlayerValuesForToday(): Observable<KTCPlayer[]> {\r\n    return this.playersList ? of(this.playersList) : this.refreshPlayerValuesForToday();\r\n  }\r\n\r\n  refreshPlayerValuesForToday(): Observable<KTCPlayer[]> {\r\n    return this.http.get<KTCPlayer[]>(this.ktcApiConfigService.getPlayerValuesForTodayEndpoint)\r\n      .pipe(tap((players: KTCPlayer[]) => this.playersList = players\r\n      ));\r\n  }\r\n\r\n  getHistoricalPlayerValueById(nameId: string): Observable<KTCPlayer[]> {\r\n    return this.http.get<KTCPlayer[]>(this.ktcApiConfigService.getHistoricalPlayerValues + nameId)\r\n      .pipe(tap((players: KTCPlayer[]) => players\r\n      ));\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {BaseComponent} from '../base-component.abstract';\nimport {SleeperApiService} from '../../services/api/sleeper/sleeper-api.service';\nimport {SleeperLeagueData, SleeperUserData} from '../../model/SleeperUser';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {PowerRankingsService} from '../services/power-rankings.service';\nimport {PlayerService} from '../../services/player.service';\nimport {MockDraftService} from '../services/mock-draft.service';\nimport {MatchupService} from '../services/matchup.service';\nimport {PlayoffCalculatorService} from '../services/playoff-calculator.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent extends BaseComponent implements OnInit {\n\n  pathSource: string = './assets/cn.jpg'\n\n  userName: string = '';\n\n  selectedLeague: SleeperLeagueData;\n\n  selectedYear: string;\n\n  supportedYears: string[] = [];\n\n  constructor(private spinner: NgxSpinnerService, private sleeperApiService: SleeperApiService, public sleeperService: SleeperService,\n              private powerRankingService: PowerRankingsService, private playersService: PlayerService, private mockDraftService: MockDraftService,\n              private matchupService: MatchupService, private playoffCalculatorService: PlayoffCalculatorService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.supportedYears = this.generateYears();\n    if(!this.sleeperService.selectedYear) {\n      this.selectedYear = this.supportedYears[0]\n    } else {\n      this.selectedYear = this.sleeperService.selectedYear;\n    }\n    this.userName = this.sleeperService.sleeperUser?.userData?.username || '';\n    this.selectedLeague = this.sleeperService.selectedLeague || null;\n    this.playersService.loadPlayerValuesForToday();\n  }\n\n  fetchSleeperInfo() {\n    this.sleeperService.loadNewUser(this.userName, this.selectedYear);\n    this.sleeperService.selectedYear = this.selectedYear;\n    this.sleeperService.resetLeague();\n  }\n\n  loadLeague(value: SleeperLeagueData) {\n    this.sleeperService.resetLeague();\n    this.selectedLeague = value;\n    this.spinner.show();\n    if (this.selectedLeague !== this.sleeperService.selectedLeague) {\n      this.powerRankingService.reset();\n      this.mockDraftService.reset();\n      this.playoffCalculatorService.reset();\n      this.matchupService.reset();\n      this.playersService.resetOwners();\n      console.time('Fetch Sleeper League Data');\n      this.addSubscriptions(this.sleeperService.$loadNewLeague(this.selectedLeague).subscribe((x) => {\n          this.spinner.hide();\n          this.sleeperService.sleeperTeamDetails.map((team) => {\n            this.playersService.generateRoster(team)\n          })\n        this.sleeperService.leagueLoaded = true;\n        console.timeEnd('Fetch Sleeper League Data');\n        }\n      ));\n\n    }\n  }\n\n  generateYears() {\n    const years = [];\n    let currentYear = new Date().getFullYear();\n    for (let i = 0; i < 16; i++) {\n      years.push((currentYear - i).toString());\n    }\n    return years;\n  }\n}\n","<div class=\"center-text margin-top-10 large-bold-header-text\">Welcome to the website!</div>\n\n<div class=\"flex-start-container margin-top-50\">\n  <div class=\"flex-item-home grid-75 center-text margin-top-25\">\n    <div class=\"mid-bold-text\">Let's get started!</div>\n    <br>\n    <mat-form-field class=\"mat-dropdown-wide-200\">\n      <mat-label>Sleeper Username</mat-label>\n      <input matInput type=\"text\" [(ngModel)]=\"userName\">\n      <button mat-button *ngIf=\"userName\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"userName=''\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n    <div>\n      <mat-form-field appearance=\"standard\">\n        <mat-label>Select a year</mat-label>\n        <mat-select [(ngModel)]=\"selectedYear\">\n          <mat-option *ngFor=\"let year of supportedYears\" [value]=\"year\">{{year}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <button mat-raised-button [disabled]=\"!userName || (userName == sleeperService.sleeperUser?.userData?.username && selectedYear == sleeperService.selectedYear)\"\n              color=\"primary\" (click)=\"fetchSleeperInfo()\">Sign In\n      </button>\n    </div>\n    <div class=\"margin-top-25\" *ngIf=\"sleeperService.sleeperUser\">\n      <div>Hello <span class=\"warning__alert\">{{sleeperService.sleeperUser.userData.username}}</span>! We found <span\n        class=\"warning__alert\">{{sleeperService.sleeperUser.leagues.length}}</span> leagues linked to this account in <span class=\"warning__alert\">{{sleeperService.selectedYear}}</span>!</div>\n      <br>\n      <mat-form-field appearance=\"standard\" *ngIf=\"sleeperService.sleeperUser.leagues.length > 0\">\n        <mat-label>Select a league</mat-label>\n        <mat-select [(ngModel)]=\"selectedLeague\" (selectionChange)=\"loadLeague($event.value)\">\n          <mat-option *ngFor=\"let league of sleeperService.sleeperUser.leagues\"\n                      [value]=\"league\">{{league.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"margin-top-25\" *ngIf=\"sleeperService.sleeperTeamDetails && sleeperService.sleeperTeamDetails.length > 0\">\n      Congratulations <span class=\"warning__alert\">{{sleeperService.sleeperUser.userData.username}}</span>! <span\n      class=\"warning__alert\">{{selectedLeague.name}}</span> was loaded successfully!\n    </div>\n\n  </div>\n\n  <div class=\"grid-25 flex-item-home\">\n    <div class=\"community-box center-text\">\n      <div class=\"mid-bold-text margin-top-10\">Join Our Community</div>\n      <br>\n      <iframe src=\"https://discord.com/widget?id=837372928005767220&theme=dark\" width=\"350\" height=\"500\"\n              allowtransparency=\"true\" frameborder=\"0\"\n              sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts\" class=\"discord-widget\"></iframe>\n    </div>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\r\nimport {EndpointsService} from '../endpoints.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  constructor(private endpointsService: EndpointsService) {\r\n  }\r\n\r\n  applyConfigs() {\r\n    this.endpointsService.assignEndpoints();\r\n  }\r\n}\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {KTCPlayer} from '../../../model/KTCPlayer';\nimport {ChartDataSets, ChartOptions} from 'chart.js';\nimport 'chartjs-plugin-colorschemes/src/plugins/plugin.colorschemes';\nimport {Classic10} from 'chartjs-plugin-colorschemes/src/colorschemes/colorschemes.tableau';\nimport {BaseChartDirective, Label} from 'ng2-charts';\nimport {PlayerService} from '../../../services/player.service';\nimport {BaseComponent} from '../../base-component.abstract';\n\n@Component({\n  selector: 'app-player-details-weekly-stats-line-chart',\n  templateUrl: './player-details-weekly-stats-line-chart.component.html',\n  styleUrls: ['./player-details-weekly-stats-line-chart.component.css']\n})\nexport class PlayerDetailsWeeklyStatsLineChartComponent extends BaseComponent implements OnInit {\n\n  @ViewChild(BaseChartDirective, {static: true}) chart: BaseChartDirective;\n\n  @Input()\n  selectedPlayer: KTCPlayer;\n\n  totalPoints: number = 0;\n\n  totalProj: number = 0;\n\n  /** line chart data*/\n  public lineChartData: ChartDataSets[] = [];\n\n  /** line chart labels*/\n  public lineChartLabels: Label[] = [];\n\n\n  public lineChartOptions: (ChartOptions & { annotation?: any }) = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      intersect: false,\n      mode: 'index',\n      position: 'nearest',\n    },\n    scales: {\n      xAxes: [{\n        display: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Week',\n          fontColor: '#d3d3d3'\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        },\n        display: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Fantasy Points',\n          fontColor: '#d3d3d3'\n        }\n      }],\n    },\n\n    plugins: {\n      colorschemes: {\n        scheme: Classic10,\n        override: true\n      }\n    }\n  };\n  public lineChartLegend = false;\n  public lineChartType = 'line';\n  public lineChartPlugins = [];\n\n  constructor(private playerService: PlayerService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.generateDataSets()\n    this.addSubscriptions(this.playerService.$currentPlayerValuesLoaded.subscribe(() => {\n      this.generateDataSets()\n    }));\n  }\n\n  generateDataSets() {\n    this.lineChartData = [];\n    this.lineChartLabels = [];\n    this.totalPoints = 0;\n    this.totalProj = 0;\n    const stats = [];\n    const projections = [];\n    for(let i = 1; i < 19; i++) {\n      const weekStats = this.playerService.pastSeasonWeeklyStats[i];\n      const weekProj = this.playerService.pastSeasonWeeklyProjections[i];\n      if(weekStats && weekProj) {\n        const stat = weekStats[this.selectedPlayer.sleeper_id]?.pts_half_ppr || 0;\n        const proj = weekProj[this.selectedPlayer.sleeper_id]?.pts_half_ppr || 0;\n        this.totalPoints += stat;\n        stats.push(stat)\n        this.totalProj += proj;\n        projections.push(proj)\n        this.lineChartLabels.push(this.playerService.getWeekByIndex(i));\n      }\n    }\n    this.lineChartData.push({label: 'Actual', data: stats.reverse()});\n    this.lineChartData.push({label: 'Projected', data: projections.reverse()});\n    this.lineChartLabels.reverse()\n    if(this.chart && this.chart.chart) {\n      this.chart.chart.data.datasets = this.lineChartData;\n      this.chart.chart.data.labels = this.lineChartLabels;\n    }\n  }\n\n  generatePerformancePercent() {\n    const percent = (this.totalPoints/this.totalProj) > 1 ? (this.totalPoints/this.totalProj) - 1 : 1 - (this.totalPoints/this.totalProj);\n    return Math.round(percent * 10000) / 100;\n  }\n\n}\n","\n<div class=\"center-text\">\n  This player has the tendency to <span class=\"warning__alert\">{{totalPoints/totalProj >= 1 ? 'outperform' : 'underperform'}} their projections by {{generatePerformancePercent()}}%</span> over the past 18 weeks!\n</div>\n\n<div class=\"margin-top-50\" style=\"display: block;\">\n  <canvas baseChart width=\"600\" height=\"400\"\n          [datasets]=\"lineChartData\"\n          [labels]=\"lineChartLabels\"\n          [options]=\"lineChartOptions\"\n          [legend]=\"lineChartLegend\"\n          [chartType]=\"lineChartType\"\n          [plugins]=\"lineChartPlugins\">\n  </canvas>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {KTCApiConfigService} from './api/ktc-api-config.service';\r\nimport {SleeperApiConfigService} from './api/sleeper/sleeper-api-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EndpointsService {\r\n\r\n  private baseUrl = 'http://localhost:' + ((process.env.PORT + 1).toString() || '3000');\r\n\r\n  constructor( private ktcApiConfigService: KTCApiConfigService, private sleeperApiConfigService: SleeperApiConfigService) {\r\n  }\r\n\r\n  public assignEndpoints(): void {\r\n\r\n    // KTC Database Endpoints\r\n    this.ktcApiConfigService.getPlayerValuesForTodayEndpoint = this.baseUrl + '/v1/player/all/today';\r\n    this.ktcApiConfigService.getHistoricalPlayerValues = this.baseUrl + '/v1/player/sleeper/';\r\n\r\n    // Sleeper Endpoints\r\n    this.sleeperApiConfigService.getSleeperUsernameEndpoint = 'https://api.sleeper.app/v1/user/';\r\n    this.sleeperApiConfigService.getSleeperLeagueEndpoint = 'https://api.sleeper.app/v1/league/';\r\n    this.sleeperApiConfigService.getSleeperDraftEndpoint = 'https://api.sleeper.app/v1/draft/';\r\n    this.sleeperApiConfigService.getSleeperStatsEndpoint = 'https://api.sleeper.app/v1/stats/nfl/regular/';\r\n    this.sleeperApiConfigService.getSleeperProjectionsEndpoint = 'https://api.sleeper.app/v1/projections/nfl/regular/';\r\n    this.sleeperApiConfigService.getSleeperNFLStateEndpoint = 'https://api.sleeper.app/v1/state/nfl';\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {KTCPlayer} from '../../model/KTCPlayer';\r\nimport {Subject} from 'rxjs';\r\nimport {PlayerComparison} from '../model/playerComparison';\r\nimport {ChartDataSets} from 'chart.js';\r\nimport {Label} from 'ng2-charts';\r\nimport {KTCApiService} from '../../services/api/ktc-api.service';\r\nimport {SleeperService} from '../../services/sleeper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerComparisonService {\r\n\r\n  /** selected players to add to table*/\r\n  selectedPlayers: PlayerComparison[] = [];\r\n\r\n  /** group2 selected player for group comparisons */\r\n  group2SelectedPlayers: PlayerComparison[] = [];\r\n\r\n  /** line chart data*/\r\n  public lineChartData: ChartDataSets[] = [];\r\n\r\n  /** line chart labels*/\r\n  public lineChartLabels: Label[] = [];\r\n\r\n  isSuperFlex: boolean = true;\r\n\r\n  /** when a player is added/removed */\r\n  $updatePlayer: Subject<PlayerComparison> = new Subject<PlayerComparison>();\r\n\r\n  /** is player mode or group mode */\r\n  isGroupMode: boolean = false;\r\n\r\n  constructor(private ktcApiService: KTCApiService, private sleeperService: SleeperService) {\r\n  }\r\n\r\n  /**\r\n   * handles adding data to list\r\n   * @param player\r\n   * @private\r\n   */\r\n  private addNewPlayer(player: KTCPlayer[], isGroup2: boolean = false) {\r\n    if (this.lineChartData[0].data.length == 0) {\r\n      this.lineChartData.splice(0, 1);\r\n    }\r\n    if(!this.isGroupMode) {\r\n      const data = [];\r\n      for (let dataPoint of player) {\r\n        if (this.lineChartLabels.includes(dataPoint.date?.slice(0, 10))) {\r\n          const index = this.lineChartLabels.indexOf(dataPoint.date.slice(0, 10));\r\n          data[index] = this.isSuperFlex ? dataPoint.sf_trade_value : dataPoint.trade_value;\r\n        }\r\n      }\r\n      this.lineChartData.push({data: data, label: player[0].full_name});\r\n      this.selectedPlayers.push({name: player[0].full_name, id: player[0].name_id, data: player} as PlayerComparison);\r\n      this.$updatePlayer.next({name: player[0].full_name, id: player[0].name_id, data: player} as PlayerComparison);\r\n    } else {\r\n      this.lineChartData = [];\r\n      if(isGroup2){\r\n        this.group2SelectedPlayers.push({name: player[0].full_name, id: player[0].name_id, data: player} as PlayerComparison);\r\n      } else {\r\n        this.selectedPlayers.push({name: player[0].full_name, id: player[0].name_id, data: player} as PlayerComparison);\r\n      }\r\n      this.lineChartData.push({data: this.calculateGroupValue(this.selectedPlayers), label: `Group 1 (${this.selectedPlayers.length} Players)`});\r\n      this.lineChartData.push({data: this.calculateGroupValue(this.group2SelectedPlayers), label: `Group 2 (${this.group2SelectedPlayers.length} Players)`})\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * refreshes table\r\n   */\r\n  refreshTable() {\r\n    this.lineChartData = [];\r\n    if (!this.isGroupMode) {\r\n      for (let player of this.selectedPlayers) {\r\n        const data = [];\r\n        for (let dataPoint of player.data) {\r\n          if (this.lineChartLabels.includes(dataPoint.date.slice(0, 10))) {\r\n            const index = this.lineChartLabels.indexOf(dataPoint.date.slice(0, 10));\r\n            data[index] = this.isSuperFlex ? dataPoint.sf_trade_value : dataPoint.trade_value;\r\n          }\r\n        }\r\n        // dont update selected player data cause it's the source of truth\r\n        this.lineChartData.push({data: data, label: player.name});\r\n      }\r\n    } else {\r\n      this.lineChartData.push({data: this.calculateGroupValue(this.selectedPlayers), label: `Group 1 (${this.selectedPlayers.length} Players)`});\r\n      this.lineChartData.push({data: this.calculateGroupValue(this.group2SelectedPlayers), label: `Group 2 (${this.group2SelectedPlayers.length} Players)`})\r\n    }\r\n\r\n    this.$updatePlayer.next();\r\n  }\r\n\r\n  /**\r\n   * calculates aggregated player values\r\n   * @param players\r\n   * @private\r\n   */\r\n  private calculateGroupValue(players: PlayerComparison[]): number[] {\r\n    const data = [];\r\n    for (let player of players) {\r\n      for (let dataPoint of player.data) {\r\n        if (this.lineChartLabels.includes(dataPoint.date.slice(0, 10))) {\r\n          const index = this.lineChartLabels.indexOf(dataPoint.date.slice(0, 10));\r\n          if (!data[index]) {\r\n            data[index] = 0;\r\n          }\r\n          data[index] += this.isSuperFlex ? dataPoint.sf_trade_value : dataPoint.trade_value;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * removed selected player from graph\r\n   * @param player\r\n   */\r\n  onRemove(player: PlayerComparison, isGroup2: boolean = false) {\r\n    if (this.isGroupMode) {\r\n      if ((this.group2SelectedPlayers.length + this.selectedPlayers.length) > 1) {\r\n        if (isGroup2) {\r\n          this.group2SelectedPlayers = this.group2SelectedPlayers.filter(p => {\r\n            return p.id != player.id;\r\n          });\r\n        } else {\r\n          this.selectedPlayers = this.selectedPlayers.filter(p => {\r\n            return p.id != player.id;\r\n          });\r\n        }\r\n        this.refreshTable();\r\n      }\r\n    } else {\r\n      if (this.selectedPlayers.length > 1) {\r\n        this.selectedPlayers = this.selectedPlayers.filter(p => {\r\n          return p.id != player.id;\r\n        });\r\n        this.lineChartData = this.lineChartData.filter(p => {\r\n          return p.label != player.name;\r\n        });\r\n        this.$updatePlayer.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * add player to chart, fetches data from db\r\n   * @param player\r\n   */\r\n  addPlayerToCharts(player: KTCPlayer, isGroup2: boolean = false) {\r\n    this.ktcApiService.getHistoricalPlayerValueById(player.name_id).subscribe((data) => {\r\n        !this.isGroupMode ? this.addNewPlayer(data) : this.addNewPlayer(data, isGroup2);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * handles toggle group mode\r\n   */\r\n  toggleGroupMode() {\r\n    if(!this.isGroupMode){\r\n      if(this.selectedPlayers.length == 0) {\r\n        this.selectedPlayers = this.group2SelectedPlayers.slice()\r\n      }\r\n    }\r\n    this.refreshTable();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {SleeperApiConfigService} from './sleeper-api-config.service';\r\nimport {SleeperLeagueData, SleeperUserData} from '../../../model/SleeperUser';\r\nimport {\r\n  SleeperCompletedPickData,\r\n  SleeperOwnerData,\r\n  SleeperRawDraftOrderData,\r\n  SleeperRawTradePicksData,\r\n  SleeperRosterData, SleeperStateOfNFL,\r\n  TeamMetrics\r\n} from '../../../model/SleeperLeague';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SleeperApiService {\r\n\r\n  constructor(private http: HttpClient, private sleeperApiConfigService: SleeperApiConfigService) {\r\n  }\r\n\r\n  getSleeperUserInformation(userName: string): Observable<SleeperUserData> {\r\n    return this.http.get<SleeperUserData>(this.sleeperApiConfigService.getSleeperUsernameEndpoint + userName);\r\n  }\r\n\r\n  getSleeperLeaguesByUserID(userId: string, year: string): Observable<SleeperLeagueData[]> {\r\n    return this.http.get<SleeperLeagueData[]>(this.sleeperApiConfigService.getSleeperUsernameEndpoint + userId + '/leagues/nfl/' + year).pipe(map((leagues: any[]) => {\r\n      let leagueList: SleeperLeagueData[] = [];\r\n      leagues.map(league => leagueList.push(new SleeperLeagueData(league.roster_positions.includes('SUPER_FLEX'), league.name, league.league_id, league.total_rosters, league.roster_positions, league.previous_league_id, league.status, league.metadata, league.settings)));\r\n      return leagueList;\r\n    }));\r\n  }\r\n\r\n  getSleeperRostersbyLeagueId(leagueId: string): Observable<SleeperRosterData[]> {\r\n    return this.http.get<SleeperRosterData[]>(this.sleeperApiConfigService.getSleeperLeagueEndpoint + leagueId + '/rosters').pipe(map((rosters: any[]) => {\r\n      let rosterList: SleeperRosterData[] = [];\r\n      rosters.map(roster => rosterList.push(new SleeperRosterData(roster.roster_id, roster.owner_id, roster.players, new TeamMetrics(roster.settings))));\r\n      return rosterList;\r\n    }));\r\n  }\r\n\r\n  getSleeperLeaguebyLeagueId(leagueId: string): Observable<SleeperLeagueData> {\r\n    return this.http.get<SleeperRosterData[]>(this.sleeperApiConfigService.getSleeperLeagueEndpoint + leagueId).pipe(map((league: any) => {\r\n      return new SleeperLeagueData(league.roster_positions.includes('SUPER_FLEX'), league.name, league.league_id, league.total_rosters, league.roster_positions, league.previous_league_id, league.status, league.metadata, league.settings);\r\n    }))\r\n  };\r\n\r\n  getSleeperOwnersbyLeagueId(leagueId: string): Observable<SleeperOwnerData[]> {\r\n    return this.http.get<SleeperOwnerData[]>(this.sleeperApiConfigService.getSleeperLeagueEndpoint + leagueId + '/users').pipe(map((owners: any[]) => {\r\n      let ownerList: SleeperOwnerData[] = [];\r\n      owners.map(owner => ownerList.push(new SleeperOwnerData(owner.user_id, owner.display_name, owner.metadata.team_name, owner.avatar)));\r\n      return ownerList;\r\n    }));\r\n  }\r\n\r\n  getSleeperDraftbyLeagueId(leagueId: string): Observable<string[]> {\r\n    return this.http.get<string[]>(this.sleeperApiConfigService.getSleeperLeagueEndpoint + leagueId + '/drafts').pipe(map((drafts: any[]) => {\r\n      let draftList: string[] = [];\r\n      drafts.map(draft => draftList.push(draft.draft_id));\r\n      return draftList;\r\n    }));\r\n  }\r\n\r\n  getSleeperDraftDetailsByDraftId(draftId: string): Observable<SleeperRawDraftOrderData> {\r\n    return this.http.get<SleeperRawDraftOrderData>(this.sleeperApiConfigService.getSleeperDraftEndpoint + draftId).pipe(map((draft: any) => {\r\n      return new SleeperRawDraftOrderData(draft.draft_id, draft.league_id, draft.status, draft.type, draft.draft_order, draft.slot_to_roster_id, draft.season, draft.settings);\r\n    }));\r\n  }\r\n\r\n  getSleeperTradedPicksByDraftId(draftId: string): Observable<SleeperRawTradePicksData[]> {\r\n    return this.http.get<SleeperRawTradePicksData[]>(this.sleeperApiConfigService.getSleeperDraftEndpoint + draftId + '/traded_picks').pipe(map((picks: any[]) => {\r\n      let pickList: SleeperRawTradePicksData[] = [];\r\n      picks.map(pick => pickList.push(new SleeperRawTradePicksData(pick.owner_id, pick.previous_owner_id, pick.roster_id, pick.round, pick.season)));\r\n      return pickList;\r\n    }));\r\n  }\r\n\r\n  getSleeperMatchUpsForWeekByLeagueId(leagueId: string, weekNumber: number): Observable<any> {\r\n    return this.http.get<any[]>(this.sleeperApiConfigService.getSleeperLeagueEndpoint + leagueId + '/matchups/' + weekNumber).pipe(map((weekMatchups: any[]) => {\r\n      return weekMatchups;\r\n    }));\r\n  }\r\n\r\n  getSleeperCompletedDraftsByDraftId(draftId: string): Observable<SleeperCompletedPickData[]> {\r\n    return this.http.get<SleeperCompletedPickData[]>(this.sleeperApiConfigService.getSleeperDraftEndpoint + draftId + '/picks').pipe(map((picks: any[]) => {\r\n      const mappedPicks: SleeperCompletedPickData[] = [];\r\n      picks.map(pick => mappedPicks.push(new SleeperCompletedPickData(pick)))\r\n      return mappedPicks;\r\n    }));\r\n  }\r\n\r\n  getSleeperStatsForYear(year: string): Observable<any> {\r\n    return this.http.get<any>(this.sleeperApiConfigService.getSleeperStatsEndpoint + year).pipe(map((stats: any) => {\r\n      return stats;\r\n    }))\r\n  }\r\n\r\n  getSleeperStateOfNFL(): Observable<SleeperStateOfNFL> {\r\n    return this.http.get<any>(this.sleeperApiConfigService.getSleeperNFLStateEndpoint).pipe(map((season: any) => {\r\n      return new SleeperStateOfNFL(season);\r\n    }))\r\n  }\r\n\r\n  getSleeperStatsForWeek(year: string, weekNum: number) {\r\n    return this.http.get<any>(this.sleeperApiConfigService.getSleeperStatsEndpoint + year + '/' + weekNum).pipe(map((stats: any) => {\r\n      return stats;\r\n    }))\r\n  }\r\n\r\n  getSleeperProjectionsForWeek(year: string, weekNum: number) {\r\n    return this.http.get<any>(this.sleeperApiConfigService.getSleeperProjectionsEndpoint + year + '/' + weekNum).pipe(map((stats: any) => {\r\n      return stats;\r\n    }))\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {PlayerService} from '../../services/player.service';\nimport {BaseComponent} from '../base-component.abstract';\nimport {KTCPlayer} from '../../model/KTCPlayer';\nimport {KTCApiService} from '../../services/api/ktc-api.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {PlayerComparisonService} from '../services/player-comparison.service';\n\n@Component({\n  selector: 'app-player-details',\n  templateUrl: './player-details.component.html',\n  styleUrls: ['./player-details.component.css']\n})\nexport class PlayerDetailsComponent extends BaseComponent implements OnInit {\n\n  playersLoaded: boolean;\n\n  selectedPlayer: KTCPlayer;\n\n  historicalTradeValue: KTCPlayer[];\n\n  constructor(public playerService: PlayerService, private ktcApiService: KTCApiService, private route: ActivatedRoute, public sleeperService: SleeperService, private router: Router, private playerComparisonService: PlayerComparisonService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    const nameId = this.route.snapshot.paramMap.get('playerNameId');\n    this.playersLoaded = (this.playerService.playerValues.length > 0);\n    if(this.playersLoaded) {\n      this.selectedPlayer = this.playerService.getPlayerByNameId(nameId);\n    }\n    this.playerService.loadPlayerValuesForToday();\n    this.addSubscriptions(this.playerService.$currentPlayerValuesLoaded.subscribe(() => {\n        this.playersLoaded = true;\n        this.selectedPlayer = this.playerService.getPlayerByNameId(nameId);\n      }),\n      this.ktcApiService.getHistoricalPlayerValueById(nameId).subscribe((data) => {\n          this.historicalTradeValue = data;\n        }\n      ));\n  }\n\n  getLast5WeekAverage() {\n    let last5Weeks = 0;\n    for(let i = 1; i < 6; i++) {\n      const weekStats = this.playerService.pastSeasonWeeklyStats[i];\n      if(weekStats) {\n        last5Weeks += weekStats[this.selectedPlayer.sleeper_id]?.pts_half_ppr || 0\n      }\n    }\n    return Math.round(last5Weeks/5 * 100)/100 || '---';\n  }\n\n  isPlayerStatsGenerated() {\n    return this.playerService.pastSeasonWeeklyStats[1] &&\n      this.playerService.pastSeasonWeeklyStats[2] &&\n      this.playerService.pastSeasonWeeklyStats[3] &&\n      this.playerService.pastSeasonWeeklyStats[4] &&\n      this.playerService.pastSeasonWeeklyStats[5] &&\n      this.playerService.pastSeasonWeeklyStats[6] &&\n      this.playerService.pastSeasonWeeklyStats[7] &&\n      this.playerService.pastSeasonWeeklyStats[8] &&\n      this.playerService.pastSeasonWeeklyStats[9] &&\n      this.playerService.pastSeasonWeeklyStats[10] &&\n      this.playerService.pastSeasonWeeklyStats[11] &&\n      this.playerService.pastSeasonWeeklyStats[12] &&\n      this.playerService.pastSeasonWeeklyStats[13] &&\n      this.playerService.pastSeasonWeeklyStats[14] &&\n      this.playerService.pastSeasonWeeklyStats[15] &&\n      this.playerService.pastSeasonWeeklyStats[16] &&\n      this.playerService.pastSeasonWeeklyStats[17] &&\n      this.playerService.pastSeasonWeeklyStats[18] &&\n      this.playerService.pastSeasonWeeklyProjections[1] &&\n      this.playerService.pastSeasonWeeklyProjections[2] &&\n      this.playerService.pastSeasonWeeklyProjections[3] &&\n      this.playerService.pastSeasonWeeklyProjections[4] &&\n      this.playerService.pastSeasonWeeklyProjections[5] &&\n      this.playerService.pastSeasonWeeklyProjections[6] &&\n      this.playerService.pastSeasonWeeklyProjections[7] &&\n      this.playerService.pastSeasonWeeklyProjections[8] &&\n      this.playerService.pastSeasonWeeklyProjections[9] &&\n      this.playerService.pastSeasonWeeklyProjections[10] &&\n      this.playerService.pastSeasonWeeklyProjections[11] &&\n      this.playerService.pastSeasonWeeklyProjections[12] &&\n      this.playerService.pastSeasonWeeklyProjections[13] &&\n      this.playerService.pastSeasonWeeklyProjections[14] &&\n      this.playerService.pastSeasonWeeklyProjections[15] &&\n      this.playerService.pastSeasonWeeklyProjections[16] &&\n      this.playerService.pastSeasonWeeklyProjections[17] &&\n      this.playerService.pastSeasonWeeklyProjections[18]\n  }\n\n  openPlayerComparison(selectedPlayer: KTCPlayer) {\n      this.playerComparisonService.addPlayerToCharts(selectedPlayer);\n      this.router.navigateByUrl('players/comparison')\n  }\n}\n","<div *ngIf=\"playersLoaded && selectedPlayer\" class=\"table-container\">\n\n  <div class=\"margin-top-10\">\n    <span class=\"link--text__no__underline mid-bold-text\" style=\"padding-right: 3px\" [routerLink]=\"['../../values']\">Players</span>\n    <mat-icon class=\"arrow-icon__nav\">chevron_right</mat-icon>\n    <span class=\"mid-bold-text\">{{selectedPlayer.full_name}}</span>\n    <div class=\"link--text__no__underline mid-bold-text button-right\" (click)=\"openPlayerComparison(selectedPlayer)\">\n      View in Player Comparison<mat-icon class=\"arrow-icon__nav\">chevron_right</mat-icon>\n    </div>\n  </div>\n  <div class=\"flex-start-container margin-top-50\">\n    <div class=\"flex-item-home grid-25\">\n      <div class=\"profile--pic\">\n        <img #image [src]=\"'https://sleepercdn.com/content/nfl/players/thumb/' + selectedPlayer.sleeper_id + '.jpg'\"\n             (error)=\"image.hidden = true\" [hidden]=\"image.hidden\" class=\"responsive\">\n      </div>\n    </div>\n    <div class=\"flex-item-home grid-60\">\n      <div class=\"large-bold-header-text\">{{selectedPlayer.full_name}}</div>\n      <br>\n      <div>\n        <span\n          style=\"padding-right: 15px\">{{playerService.getFullTeamNameFromACC(selectedPlayer.team)}} {{selectedPlayer.position}}</span>\n        <mat-icon class=\"icon--break\">circle</mat-icon>\n        <span>{{selectedPlayer.age != -1 ? selectedPlayer.age : '??'}} y.o.</span>\n      </div>\n      <div *ngIf=\"sleeperService.selectedLeague\">\n        <span class=\"small-text__light disabled__color\">Owned By</span><span\n        style=\"padding-left: 10px\" class=\"link--text__no__underline\" [routerLink]=\"['../../../league/team', selectedPlayer.owner]\">{{selectedPlayer.owner || 'None'}}</span>\n      </div>\n      <br>\n      <div class=\"standings-row\">\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">Position Rank</div>\n          <div *ngIf=\"sleeperService.selectedLeague\" class=\"mid-bold-text\">{{sleeperService.selectedLeague.isSuperflex ? selectedPlayer.sf_position_rank : selectedPlayer.position_rank}}</div>\n          <div *ngIf=\"!sleeperService.selectedLeague\" class=\"mid-bold-text\">{{selectedPlayer.sf_position_rank}}</div>\n        </div>\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">Experience</div>\n          <div class=\"mid-bold-text\">{{selectedPlayer.experience}}\n            Year{{selectedPlayer.experience == 1 ? 's' : ''}}</div>\n        </div>\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">{{playerService.playerStatsYear}} Points</div>\n          <div class=\"mid-bold-text\">{{playerService.playerStats[selectedPlayer.sleeper_id]?.pts_half_ppr}}</div>\n        </div>\n        <div class=\"standings-col\">\n          <div class=\"small-text__light text__light disabled__color\">Last 5 Weeks Average</div>\n          <div class=\"mid-bold-text\">{{getLast5WeekAverage()}}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-item-home grid-15\">\n      <div class=\"button-right center-text\">\n        <mat-card>\n          <div class=\"text__light\">Trade Value</div>\n          <div *ngIf=\"sleeperService.selectedLeague\" class=\"large-bold-header-text\">{{sleeperService.selectedLeague.isSuperflex ? selectedPlayer.sf_trade_value : selectedPlayer.trade_value}}</div>\n          <div *ngIf=\"!sleeperService.selectedLeague\" class=\"large-bold-header-text\">{{selectedPlayer.sf_trade_value}}</div>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n\n  <mat-tab-group mat-align-tabs=\"center\" class=\"margin-top-25\">\n    <mat-tab label=\"Past Week Summary\">\n      <div class=\"mid-bold-text margin-top-10 center-text\">Past 18 Weeks Points Vs. Projections</div>\n      <div class=\"margin-top-10 center-text\">Below is the past 18 weeks of points and projections based on Sleeper's <span class=\"info__alert\">0.5 PPR scoring</span>.\n      </div>\n      <app-player-details-weekly-stats-line-chart *ngIf=\"isPlayerStatsGenerated()\"\n                                                  [selectedPlayer]=\"selectedPlayer\"></app-player-details-weekly-stats-line-chart>\n    </mat-tab>\n    <mat-tab label=\"Past Box Scores\">\n            <div class=\"mid-bold-text margin-top-10 center-text\">Past 18 Box Scores</div>\n            <div class=\"margin-top-10 center-text\">Below is the past 18 weeks of stats from Sleeper for the following player. The fantasy scoring is <span class=\"info__alert\">0.5 PPR scoring</span>.</div>\n      <app-player-details-weekly-box-scores-table *ngIf=\"isPlayerStatsGenerated()\" [selectedPlayer]=\"selectedPlayer\"></app-player-details-weekly-box-scores-table>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {ConfigService} from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StartupService {\r\n\r\n  constructor(private configService: ConfigService) {\r\n  }\r\n\r\n  public startupApplication(): Promise<any> {\r\n    return new Promise(resolve => {\r\n      resolve(this.configService.applyConfigs())\r\n    })\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KTCApiConfigService {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _getPlayerValuesForTodayEndpoint = '';\r\n\r\n  private _getHistoricalPlayerValues = '';\r\n\r\n  get getPlayerValuesForTodayEndpoint(): string {\r\n    return this._getPlayerValuesForTodayEndpoint;\r\n  }\r\n\r\n  set getPlayerValuesForTodayEndpoint(value: string) {\r\n    this._getPlayerValuesForTodayEndpoint = value;\r\n  }\r\n\r\n  get getHistoricalPlayerValues(): string {\r\n    return this._getHistoricalPlayerValues;\r\n  }\r\n\r\n  set getHistoricalPlayerValues(value: string) {\r\n    this._getHistoricalPlayerValues = value;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {KTCPlayer} from '../model/KTCPlayer';\r\nimport {KTCApiService} from './api/ktc-api.service';\r\nimport {NgxSpinnerService} from 'ngx-spinner';\r\nimport {forkJoin, Observable, of, Subject, timer} from 'rxjs';\r\nimport {SleeperStateOfNFL, SleeperTeam, SleeperTeamMatchUpData} from '../model/SleeperLeague';\r\nimport {SleeperApiService} from './api/sleeper/sleeper-api.service';\r\nimport {mergeMap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  playerValues: KTCPlayer[] = [];\r\n\r\n  playerStats = {};\r\n\r\n  pastSeasonWeeklyStats = {};\r\n\r\n  pastSeasonWeeklyProjections = {};\r\n\r\n  stateOfNFL: SleeperStateOfNFL;\r\n\r\n  private teamAccToFullName = {\r\n    'CAR': 'Carolina Panthers',\r\n    'NOS': 'New Orleans Saints',\r\n    'TBB': 'Tampa Bay Buccaneers',\r\n    'ATL': 'Atlanta Falcons',\r\n    'LAR': 'Los Angeles Rams',\r\n    'SEA': 'Seattle Seahawks',\r\n    'SFO': 'San Francisco 49ers',\r\n    'ARI': 'Arizona Cardinals',\r\n    'DAL': 'Dallas Cowboys',\r\n    'NYG': 'New York Giants',\r\n    'PHI': 'Philadelphia Eagles',\r\n    'WAS': 'Washington Football Team',\r\n    'GBP': 'Green Bay Packers',\r\n    'MIN': 'Minnesota Vikings',\r\n    'DET': 'Detroit Lions',\r\n    'CHI': 'Chicago Bears',\r\n    'KCC': 'Kansas City Chiefs',\r\n    'LVR': 'Las Vegas Raiders',\r\n    'LAC': 'Los Angeles Chargers',\r\n    'DEN': 'Denver Broncos',\r\n    'HOU': 'Houston Texans',\r\n    'TEN': 'Tennessee Titans',\r\n    'IND': 'Indianapolis Colts',\r\n    'JAC': 'Jacksonville Jaguars',\r\n    'CLE': 'Cleveland Browns',\r\n    'PIT': 'Pittsburgh Steelers',\r\n    'BAL': 'Baltimore Ravens',\r\n    'CIN': 'Cincinnati Bengals',\r\n    'BUF': 'Buffalo Bills',\r\n    'MIA': 'Miami Dolphins',\r\n    'NYJ': 'New York Jets',\r\n    'NEP': 'New England Patriots',\r\n    'FA': 'Free Agent'\r\n  };\r\n\r\n  playerStatsYear: string = '';\r\n\r\n  $currentPlayerValuesLoaded: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private ktcApiService: KTCApiService, private sleeperApiService: SleeperApiService, private spinner: NgxSpinnerService) {\r\n  }\r\n\r\n  /**\r\n   * loads all player data upon entering site\r\n   */\r\n  loadPlayerValuesForToday() {\r\n    this.spinner.show();\r\n    this.ktcApiService.getPlayerValuesForToday().subscribe((response: KTCPlayer[]) => {\r\n      this.playerValues = response;\r\n      this.$loadPlayerStatsForSeason().subscribe( (response) => {\r\n        this.playerStats = response;\r\n        this.spinner.hide();\r\n        this.$currentPlayerValuesLoaded.next();\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * load player stats and projection for season\r\n   * @private\r\n   */\r\n  private $loadPlayerStatsForSeason(): Observable<any> {\r\n    if(this.playerStatsYear !== '') {\r\n      return of(this.playerStats);\r\n    }\r\n    return this.sleeperApiService.getSleeperStateOfNFL().pipe(mergeMap((season) => {\r\n      this.stateOfNFL = season;\r\n      this.playerStatsYear = this.stateOfNFL.seasonType == 'off' || this.stateOfNFL.seasonType == 'pre' ? this.stateOfNFL.previousSeason : this.stateOfNFL.season;\r\n      const observe = [];\r\n      observe.push(this.sleeperApiService.getSleeperStatsForYear(this.playerStatsYear).pipe(mergeMap((response: any) => {\r\n        this.playerStats = response;\r\n        return of(this.playerStats);\r\n      })));\r\n      let currentWeekInd = this.stateOfNFL.week;\r\n      let currentYearInd = Number(this.stateOfNFL.season);\r\n      for (let weekNum = 1; weekNum < 19; weekNum++) {\r\n        if(currentWeekInd === 0) {\r\n          currentYearInd = currentYearInd - 1;\r\n          currentWeekInd = currentYearInd < 2021 ? 17 : 18\r\n        }\r\n        observe.push(this.sleeperApiService.getSleeperStatsForWeek(currentYearInd.toString(), currentWeekInd).pipe(mergeMap((weeklyStats) => {\r\n          this.pastSeasonWeeklyStats[weekNum] = weeklyStats;\r\n          return of(weeklyStats);\r\n        })));\r\n\r\n        observe.push(this.sleeperApiService.getSleeperProjectionsForWeek(currentYearInd.toString(), currentWeekInd).pipe(mergeMap((weeklyStats) => {\r\n          this.pastSeasonWeeklyProjections[weekNum] = weeklyStats;\r\n          return of(weeklyStats);\r\n        })));\r\n        currentWeekInd--;\r\n      }\r\n      forkJoin(observe).subscribe(() => {\r\n          return of(this.pastSeasonWeeklyStats);\r\n        }\r\n      );\r\n      return of(this.pastSeasonWeeklyStats);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * assign players to fantasy teams\r\n   * @param team\r\n   */\r\n  generateRoster(team: SleeperTeam): KTCPlayer[] {\r\n    let roster = [];\r\n    if(!team.roster.players) return [];\r\n    for (const sleeperId of team.roster?.players) {\r\n      for (const player of this.playerValues) {\r\n        if (sleeperId === player.sleeper_id) {\r\n          player.owner = team.owner.ownerName;\r\n          roster.push(player);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return roster;\r\n  }\r\n\r\n  /**\r\n   * get player based on sleeper id\r\n   * @param id\r\n   */\r\n  getPlayerBySleeperId(id: string): KTCPlayer {\r\n    for (const player of this.playerValues) {\r\n      if (id === player.sleeper_id) {\r\n        return player;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * reset players owners when changing leagues\r\n   */\r\n  resetOwners() {\r\n    for (const player of this.playerValues) {\r\n        player.owner = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get full team name from acc\r\n   * @param acc\r\n   */\r\n  getFullTeamNameFromACC(acc: string): string {\r\n    return this.teamAccToFullName[acc];\r\n  }\r\n\r\n  /**\r\n   * returns players current value based name id\r\n   * @param id\r\n   */\r\n  getPlayerByNameId(id: string) {\r\n    for (const player of this.playerValues) {\r\n      if (id === player.name_id) {\r\n        return player;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * get week lable for table\r\n   * @param index\r\n   */\r\n  getWeekByIndex(index: number) {\r\n    index--;\r\n    if(this.stateOfNFL) {\r\n      let weekNum = this.stateOfNFL.week - index;\r\n      let year = Number(this.stateOfNFL.season);\r\n      if(weekNum < 1) {\r\n        year--;\r\n        weekNum = (year < 2021 ? 17 : 18) - Math.abs(weekNum);\r\n        if(weekNum < 1) {\r\n          year--;\r\n          weekNum = (year < 2021 ? 17 : 18) - Math.abs(weekNum);\r\n        }\r\n      }\r\n      return 'Week ' + weekNum + ' ' + year;\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SleeperTeam} from '../../model/SleeperLeague';\r\nimport {Division} from '../model/playoffCalculator';\r\nimport {SleeperLeagueData} from '../../model/SleeperUser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayoffCalculatorService {\r\n\r\n  divisions: Division[] = [];\r\n\r\n  generateDivisions(league: SleeperLeagueData, teams: SleeperTeam[]) {\r\n    if (this.divisions.length === 0) {\r\n      if (league.divisions) {\r\n        for (let i = 0; i < league.divisions; i++) {\r\n          const divisionTeams: SleeperTeam[] = [];\r\n          for (let team of teams) {\r\n            if (team.roster.teamMetrics.division === i + 1) {\r\n              divisionTeams.push(team);\r\n            }\r\n          }\r\n          divisionTeams.sort((a, b) => {\r\n            return a.roster.teamMetrics.rank - b.roster.teamMetrics.rank;\r\n          });\r\n          this.divisions.push(new Division(i + 1, divisionTeams));\r\n        }\r\n      } else {\r\n        const allTeams = teams.slice();\r\n        allTeams.sort((a, b) => {\r\n          if(a.roster.teamMetrics.rank != 0){\r\n            return a.roster.teamMetrics.rank - b.roster.teamMetrics.rank;\r\n          } else {\r\n            return b.roster.teamMetrics.wins - a.roster.teamMetrics.wins ||  b.roster.teamMetrics.fpts - a.roster.teamMetrics.fpts;\r\n          }\r\n        });\r\n        if(allTeams[0].roster.teamMetrics.rank == 0) {\r\n          for(let i = 0; i < allTeams.length; i++) {\r\n            allTeams[i].roster.teamMetrics.rank = i + 1;\r\n          }\r\n        }\r\n        this.divisions.push(new Division(1, allTeams))\r\n        league.divisions = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.divisions = [];\r\n  }\r\n}\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {TeamPowerRanking} from '../../model/powerRankings';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {KTCPlayer} from '../../../model/KTCPlayer';\nimport {SleeperTeam} from '../../../model/SleeperLeague';\nimport {SleeperService} from '../../../services/sleeper.service';\n\nexport const detailExpand = trigger('detailExpand',\n  [\n    state('collapsed, void', style({ height: '0px'})),\n    state('expanded', style({ height: '*' })),\n    transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    transition('expanded <=> void', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ]);\n\n@Component({\n  selector: 'app-power-rankings-table',\n  templateUrl: './power-rankings-table.component.html',\n  styleUrls: ['./power-rankings-table.component.css'],\n  animations: [detailExpand],\n})\nexport class PowerRankingsTableComponent implements OnInit {\n\n  @Input()\n  powerRankings: TeamPowerRanking[];\n\n  @Input()\n  isSuperFlex: boolean;\n\n  dataSource: MatTableDataSource<TeamPowerRanking> = new MatTableDataSource<TeamPowerRanking>();\n\n  columnsToDisplay = ['team', 'owner', 'overallRank', 'starterRank', 'qbRank', 'rbRank', 'wrRank', 'teRank', 'draftRank'];\n  expandedElement: any[] = [];\n\n  alertThreshold: number;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(public sleeperService: SleeperService) { }\n\n  ngOnInit(): void {\n    this.alertThreshold = this.powerRankings.length/3;\n    this.dataSource = new MatTableDataSource<TeamPowerRanking>(this.powerRankings);\n\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      if (property === 'team') {\n        return item.team.owner.teamName;\n      } else if (property === 'owner') {\n        return item.team.owner.ownerName;\n      } else if (property === 'qbRank') {\n        return item.roster[0].rank;\n      } else if (property === 'rbRank') {\n        return item.roster[1].rank;\n      } else if (property === 'wrRank') {\n        return item.roster[2].rank;\n      } else if (property === 'teRank') {\n        return item.roster[3].rank;\n      } else if (property === 'draftRank') {\n        return item.picks.rank;\n      } else {\n        return item[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n\n  }\n\n  checkExpanded(element: TeamPowerRanking): boolean {\n    let flag = false;\n    this.expandedElement.forEach(e => {\n      if(e === element) {\n        flag = true;\n      }\n    });\n    return flag;\n  }\n\n  pushPopElement(element: TeamPowerRanking) {\n    const index = this.expandedElement.indexOf(element);\n    if(index === -1) {\n      this.expandedElement.push(element);\n    } else {\n      this.expandedElement.splice(index,1);\n    }\n  }\n\n  expandCollapseAll() {\n    this.dataSource.data = this.powerRankings;\n    if(this.expandedElement.length != this.powerRankings.length) {\n      this.expandedElement = this.powerRankings;\n    } else {\n      this.expandedElement = [];\n    }\n  }\n\n  isStarter(team: TeamPowerRanking, player: KTCPlayer): boolean {\n    return team.starters.includes(player);\n  }\n}\n","<div class=\"power-ranking-container\">\n  <div class=\"margin-bot-20\">\n    <span class=\"container_spacer\"></span>\n    <button mat-raised-button color=\"accent\" class=\"button-right\"\n            (click)=\"expandCollapseAll()\">{{expandedElement.length == powerRankings.length ? 'Collapse' : 'Expand'}} All\n    </button>\n  </div>\n  <table mat-table\n         [dataSource]=\"dataSource\" multiTemplateDataRows\n         class=\"mat-elevation-z8\" matSort matSortActive=\"overallRank\" matSortDirection=\"asc\">\n\n    <ng-container matColumnDef=\"team\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Team</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.team.owner.teamName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"owner\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Owner</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.team.owner.ownerName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"overallRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Overall Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.overallRank}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"starterRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Starter Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.starterRank}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"qbRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>QB Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.roster[0].rank}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rbRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>RB Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.roster[1]?.rank}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"wrRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>WR Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.roster[2]?.rank}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"teRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>TE Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.roster[3]?.rank}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"draftRank\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Draft Rank</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.picks.rank}} </td>\n    </ng-container>\n\n    <!--   Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n    <ng-container matColumnDef=\"expandedDetail\">\n      <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n        <div class=\"power-ranking-element-detail container__no-padding\"\n             [@detailExpand]=\"checkExpanded(element) ? 'expanded' : 'collapsed'\">\n          <div class=\"grid-20\">\n            <div><span class=\"text__light\">Team </span>\n              <div class=\"mid-bold-text link--text__no__underline\" [routerLink]=\"['../team', element.team.owner.ownerName]\">{{element.team.owner.teamName}}</div>\n            </div>\n            <br>\n            <div><span class=\"small-text__light\">Owner: </span>\n              <div class=\"mid-bold-text\">{{element.team.owner.ownerName}}</div>\n            </div>\n            <div>\n              <span class=\"small-text__light\">Overall Value: </span>\n              <div>\n                <span\n                  class=\"mid-bold-text\">{{isSuperFlex ? element.sfTradeValueOverall : element.tradeValueOverall}}</span>\n                <span class=\"small-text__light\"> (Rank: <span\n                  [ngClass]=\"{'success__alert': element.overallRank < alertThreshold, 'warning__alert': element.overallRank > alertThreshold * 2}\">{{element.overallRank}}</span>)</span>\n              </div>\n            </div>\n            <div>\n              <span class=\"small-text__light\">Starter Value: </span>\n              <div><span\n                class=\"mid-bold-text\">{{isSuperFlex ? element.sfTradeValueStarter : element.tradeValueStarter}}</span>\n                <span class=\"small-text__light\"> (Rank: <span\n                  [ngClass]=\"{'success__alert': element.starterRank < alertThreshold, 'warning__alert': element.starterRank > alertThreshold * 2}\">{{element.starterRank}}</span>)</span>\n              </div>\n            </div>\n          </div>\n          <div *ngFor=\"let positionGroup of element.roster\" class=\"grid-16\">\n            <div>\n              <span><span class=\"small-text__light\">{{positionGroup.position}} Value: </span> <span\n                class=\"mid-bold-text\">{{isSuperFlex ? positionGroup.sfTradeValue : positionGroup.tradeValue}}</span></span>\n              <div class=\"small-text__light\"> Rank: <span\n                [ngClass]=\"{'success__alert': positionGroup.rank < alertThreshold, 'warning__alert': positionGroup.rank > alertThreshold * 2}\">{{positionGroup.rank}}</span>\n              </div>\n            </div>\n            <hr class=\"dark\">\n            <div *ngFor=\"let player of positionGroup.players\">\n              <span class=\"starter-icon\"><mat-icon [inline]=\"true\" *ngIf=\"isStarter(element, player)\">grade</mat-icon></span>\n              <span>{{player.full_name}} </span>\n              <span [ngClass]=\"{'success__alert': (isSuperFlex ? player.sf_trade_value : player.trade_value) > 6000, 'urgent__alert': (isSuperFlex ? player.sf_trade_value : player.trade_value) < 2000}\">{{isSuperFlex ? player.sf_trade_value : player.trade_value}}</span>\n            </div>\n          </div>\n          <div class=\"grid-16\">\n            <div>\n              <span><span class=\"small-text__light\">Upcoming Picks: </span><span\n                class=\"mid-bold-text\">{{isSuperFlex ? element.picks.sfTradeValue : element.picks.tradeValue}}</span></span>\n              <div class=\"small-text__light\"> (Rank: <span\n                [ngClass]=\"{'success__alert': element.picks.rank < alertThreshold, 'warning__alert': element.picks.rank > alertThreshold * 2}\">{{element.picks.rank}}</span>)\n              </div>\n            </div>\n            <hr class=\"dark\">\n            <div *ngFor=\"let player of element.picks.players\">\n              <span>{{player.full_name}} </span>\n              <span [ngClass]=\"{'success__alert': (isSuperFlex ? player.sf_trade_value : player.trade_value) > 6000, 'urgent__alert': (isSuperFlex ? player.sf_trade_value : player.trade_value) < 2000}\">{{isSuperFlex ? player.sf_trade_value : player.trade_value}}</span>\n            </div>\n          </div>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n        class=\"power-ranking-element-row\"\n        [class.power-ranking-expanded-row]=\"checkExpanded(element)\"\n        (click)=\"pushPopElement(element)\"\n        [ngClass]=\"{'accent__color__background': sleeperService.sleeperUser.userData.username === element.team.owner.ownerName}\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"power-ranking-detail-row\"></tr>\n  </table>\n\n</div>\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {KTCPlayer} from '../../../model/KTCPlayer';\nimport {TeamMockDraftPick} from '../../model/mockDraft';\nimport {MockDraftService} from '../../services/mock-draft.service';\nimport {SleeperService} from '../../../services/sleeper.service';\nimport {TeamPowerRanking} from '../../model/powerRankings';\nimport {PowerRankingsService} from '../../services/power-rankings.service';\n\n@Component({\n  selector: 'app-draft-table',\n  templateUrl: './draft-table.component.html',\n  styleUrls: ['./draft-table.component.css']\n})\nexport class DraftTableComponent implements OnInit {\n\n  mockDraftConfig: string;\n\n  displayedColumns: string[] = [];\n\n  selectedPlayers: KTCPlayer[] = [];\n\n  pageLength: number = 12;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  dataSource: MatTableDataSource<TeamMockDraftPick> = new MatTableDataSource<TeamMockDraftPick>();\n\n  constructor(private mockDraftService: MockDraftService, public sleeperService: SleeperService, private powerRankingService: PowerRankingsService) { }\n\n  ngOnInit(): void {\n    this.mockDraftConfig = 'player';\n    this.displayedColumns = ['pickNumber', 'team', 'owner', 'projectedPlayer'];\n    this.selectedPlayers = JSON.parse(JSON.stringify(this.mockDraftService.selectablePlayers))\n    this.pageLength = this.sleeperService.selectedLeague.totalRosters;\n    this.dataSource = new MatTableDataSource(this.mockDraftService.teamPicks);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * updates draft dropdown to show for player value mode\n   * @param pick\n   */\n  updateDraftSelections(pick: number) {\n    const staticPicks = this.selectedPlayers.slice(0, pick);\n    let newDropDown = [];\n    for(let player of this.mockDraftService.selectablePlayers){\n      if(!staticPicks.some(picked => picked.sleeper_id === player.sleeper_id))\n        newDropDown.push(player);\n    }\n    this.selectedPlayers = staticPicks.concat(newDropDown)\n  }\n\n  /**\n   * disable player in custom mode dropdown if already selected\n   * @param player\n   */\n  isPlayerAlreadySelected(player: KTCPlayer): boolean {\n    return this.selectedPlayers.some(picked => picked.name_id === player.name_id);\n  }\n\n  /**\n   * change mock draft type\n   */\n  changeMockDraftType() {\n    if(this.mockDraftConfig !== 'custom') {\n      this.selectedPlayers = JSON.parse(JSON.stringify(this.mockDraftService.selectablePlayers));\n    } else {\n      this.selectedPlayers = [];\n    }\n  }\n\n  /**\n   * resets mock draft values\n   */\n  resetMockDraft() {\n    this.changeMockDraftType();\n  }\n}\n","<div class=\"table-container\">\n  <div>\n    <mat-button-toggle-group [(ngModel)]=\"mockDraftConfig\" (change)=\"changeMockDraftType()\" class=\"button-left\"\n                             style=\"overflow: auto\">\n      <mat-button-toggle value=\"player\">Player Value</mat-button-toggle>\n      <!--      <mat-button-toggle value=\"team\">Team Needs</mat-button-toggle>-->\n      <mat-button-toggle value=\"custom\">Custom</mat-button-toggle>\n    </mat-button-toggle-group>\n    <span class=\"container_spacer\"></span>\n    <button class=\"button-right\" mat-raised-button color=\"accent\" (click)=\"resetMockDraft()\">Reset</button>\n  </div>\n\n  <div class=\"margin-top-10 mat-elevation-z8\">\n    <mat-table [dataSource]=\"dataSource\">\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"pickNumber\">\n        <mat-header-cell *matHeaderCellDef>Pick</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.pickdisplay}}</mat-cell>\n      </ng-container>\n\n      <!-- Pos Column -->\n      <ng-container matColumnDef=\"team\">\n        <mat-header-cell *matHeaderCellDef>Team</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.pickTeam}}</mat-cell>\n      </ng-container>\n\n      <!-- Age Column -->\n      <ng-container matColumnDef=\"owner\">\n        <mat-header-cell *matHeaderCellDef>Owner</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.pickOwner}}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"pickValue\">\n        <mat-header-cell *matHeaderCellDef>Pick Trade Value</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{element.pickOwner}}</mat-cell>\n      </ng-container>\n\n      <!-- Value Column -->\n      <ng-container matColumnDef=\"projectedPlayer\">\n        <mat-header-cell *matHeaderCellDef>Projected Pick</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <!-- player value mock draft dropdown-->\n          <mat-form-field *ngIf=\"element.pick <= selectedPlayers.length && mockDraftConfig == 'player'\"\n                          appearance=\"standard\" class=\"mat-dropdown-wide-300\">\n            <mat-select [(ngModel)]=\"selectedPlayers[element.pick-1]\"\n                        (selectionChange)=\"updateDraftSelections(element.pick)\" placeholder=\"Select Player\">\n              <mat-option *ngFor=\"let player of selectedPlayers.slice(element.pick-1)\"\n                          [value]=\"player\">{{player.position}} {{player.full_name}}\n                - {{player.sf_trade_value}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <!-- custom mock draft dropdown-->\n          <mat-form-field *ngIf=\"element.pick <= mockDraftService.selectablePlayers.length && mockDraftConfig == 'custom'\"\n                          appearance=\"standard\" class=\"mat-dropdown-wide-300\">\n            <mat-select [(ngModel)]=\"selectedPlayers[element.pick-1]\" drlr placeholder=\"Select Player\">\n              <mat-option *ngFor=\"let player of mockDraftService.selectablePlayers\" [disabled]=\"isPlayerAlreadySelected(player)\"\n                          [value]=\"player\">{{player.position}} {{player.full_name}}\n                - {{player.sf_trade_value}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"element.pick > mockDraftService.selectablePlayers.length\">\n          No more rookies in system\n        </span>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'accent__color__background': sleeperService.sleeperUser.userData.username === row.pickOwner}\"></mat-row>\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[pageLength, 2 * pageLength, 4 * pageLength]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit } from '@angular/core';\nimport {SleeperService} from '../../../services/sleeper.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {TeamMockDraftPick} from '../../model/mockDraft';\nimport {MatchupService} from '../../services/matchup.service';\nimport {ScheduleComp} from '../../model/matchup';\n\n@Component({\n  selector: 'app-schedule-comparison',\n  templateUrl: './schedule-comparison.component.html',\n  styleUrls: ['./schedule-comparison.component.css']\n})\nexport class ScheduleComparisonComponent implements OnInit {\n\n  displayColumns: string[] = [];\n\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\n\n  constructor(private sleeperService: SleeperService, private matchupService: MatchupService) { }\n\n  ngOnInit(): void {\n    this.displayColumns = this.generateCols();\n    this.dataSource = new MatTableDataSource(this.matchupService.scheduleComparison);\n  }\n\n  /**\n   * generate columns\n   * @private\n   */\n  private generateCols() {\n    const rosterIds = ['team'];\n    for(let team of this.sleeperService.sleeperTeamDetails){\n      rosterIds.push(team.roster.rosterId.toString())\n    }\n    return rosterIds;\n  }\n\n  /**\n   * return record string to display\n   * @param element\n   * @param col\n   */\n  getRecord(element: ScheduleComp, col: string): string {\n    return `${element.record[col][0]}-${element.record[col][1]}` + (element.record[col][2] > 0 ? `-${element.record[col][2]}` : '');\n  }\n\n  /**\n   * is same team\n   * this method is to compare string to num\n   * @param col\n   * @param rosterId\n   */\n  areSameTeam(col: string, rosterId: number) {\n    return Number(col) === rosterId;\n  }\n}\n","\n<div *ngIf=\"displayColumns.length > 0\" class=\"margin-top-10 table-container\">\n  <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"team\">\n      <mat-header-cell *matHeaderCellDef>Teams</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{matchupService.getTeamName(element.rosterId, sleeperService.sleeperTeamDetails)}}</mat-cell>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let col of displayColumns.slice(1)\">\n      <ng-container [matColumnDef]=\"col\">\n        <mat-header-cell class=\"mat-table-center-text\" *matHeaderCellDef>{{matchupService.getTeamName(col, sleeperService.sleeperTeamDetails)}}</mat-header-cell>\n        <mat-cell class=\"mat-table-center-text\" [ngClass]=\"{'accent__color__background': areSameTeam(col, element.rosterId)}\" *matCellDef=\"let element\">{{getRecord(element, col)}}</mat-cell>\n      </ng-container>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayColumns;\"></mat-row>\n  </mat-table>\n</div>\n\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {BaseChartDirective, Label} from 'ng2-charts';\nimport {ChartDataSets, ChartOptions} from 'chart.js';\nimport {PowerRankingsService} from '../../services/power-rankings.service';\nimport {SleeperService} from '../../../services/sleeper.service';\n\n@Component({\n  selector: 'app-power-rankings-chart',\n  templateUrl: './power-rankings-chart.component.html',\n  styleUrls: ['./power-rankings-chart.component.css']\n})\nexport class PowerRankingsChartComponent implements OnInit {\n\n  @ViewChild(BaseChartDirective, {static: true}) chart: BaseChartDirective;\n\n  selectedFilter: string = 'starter';\n\n  public lineChartOptions: (ChartOptions & { annotation?: any }) = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      intersect: false,\n      mode: 'index'\n    },\n    title: {\n      text: 'Overall Team Value'\n    },\n    scales: {\n      xAxes: [{\n        display: true,\n        stacked: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Team',\n          fontColor: '#d3d3d3'\n        }\n      }],\n      yAxes: [{\n        display: true,\n        stacked: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Value',\n          fontColor: '#d3d3d3'\n        }\n      }]\n    },\n    legend: {\n      position: 'left',\n      labels: {\n        fontColor: '#d3d3d3'\n      },\n      reverse: true,\n    },\n    plugins: {\n    }\n  };\n  public lineChartLegend = true;\n  public lineChartType = 'bar';\n  public lineChartPlugins = [];\n  data: ChartDataSets[] = [];\n  dataLabels: Label[] = [];\n\n  constructor(private powerRankingService: PowerRankingsService, private sleeperService: SleeperService) {\n  }\n\n  ngOnInit(): void {\n    this.dataLabels = [];\n    for (let team of this.powerRankingService.powerRankings) {\n      this.dataLabels.push(team.team.owner.ownerName);\n    }\n    this.refreshChart();\n  }\n\n  private refreshChart() {\n    let temp = [];\n    for (let team of this.powerRankingService.powerRankings) {\n      const index = this.dataLabels.indexOf(team.team.owner.ownerName);\n      temp[index] = this.sleeperService.selectedLeague.isSuperflex ? team.roster[0].sfTradeValue : team.roster[0].tradeValue;\n      this.data[0] = {data: temp, label: 'QB'};\n    }\n    temp = [];\n    for (let team of this.powerRankingService.powerRankings) {\n      const index = this.dataLabels.indexOf(team.team.owner.ownerName);\n      temp[index] = this.sleeperService.selectedLeague.isSuperflex ? team.roster[1].sfTradeValue : team.roster[1].tradeValue;\n      this.data[1] = {data: temp, label: 'RB'};\n    }\n    temp = [];\n    for (let team of this.powerRankingService.powerRankings) {\n      const index = this.dataLabels.indexOf(team.team.owner.ownerName);\n      temp[index] = this.sleeperService.selectedLeague.isSuperflex ? team.roster[2].sfTradeValue : team.roster[2].tradeValue;\n      this.data[2] = {data: temp, label: 'WR'};\n    }\n    temp = [];\n    for (let team of this.powerRankingService.powerRankings) {\n      const index = this.dataLabels.indexOf(team.team.owner.ownerName);\n      temp[index] = this.sleeperService.selectedLeague.isSuperflex ? team.roster[3].sfTradeValue : team.roster[3].tradeValue;\n      this.data[3] = {data: temp, label: 'TE'};\n    }\n    temp = [];\n    for (let team of this.powerRankingService.powerRankings) {\n      const index = this.dataLabels.indexOf(team.team.owner.ownerName);\n      temp[index] = this.sleeperService.selectedLeague.isSuperflex ? team.picks.sfTradeValue : team.picks.tradeValue;\n      this.data[4] = {data: temp, label: 'Draft Capital'};\n    }\n  }\n}\n","<div class=\"table-container margin-top-25\">\n  <div style=\"display: block;\" *ngIf=\"data\">\n    <canvas baseChart width=\"600\" height=\"400\"\n            [datasets]=\"data\"\n            [labels]=\"dataLabels\"\n            [options]=\"lineChartOptions\"\n            [legend]=\"lineChartLegend\"\n            [chartType]=\"lineChartType\"\n            [plugins]=\"lineChartPlugins\">\n    </canvas>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {KTCApiService} from './services/api/ktc-api.service';\nimport {KTCPlayer} from './model/KTCPlayer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'fantasy-app';\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<app-header></app-header>\n<ngx-spinner\n  bdColor=\"rgba(51,51,51,0.8)\"\n  size=\"medium\"\n  color=\"#fff\"\n  type=\"ball-scale-multiple\"\n></ngx-spinner>\n<router-outlet></router-outlet>\n","import {Injectable} from '@angular/core';\r\nimport {SleeperTeam} from '../../model/SleeperLeague';\r\nimport {KTCPlayer} from '../../model/KTCPlayer';\r\nimport {PositionPowerRanking, TeamPowerRanking} from '../model/powerRankings';\r\nimport {SleeperService} from '../../services/sleeper.service';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PowerRankingsService {\r\n\r\n  /** team power rankings */\r\n  powerRankings: TeamPowerRanking[] = [];\r\n\r\n  constructor(private sleeperService: SleeperService) {\r\n  }\r\n\r\n  /** supported position groups to power rank */\r\n  positionGroups: string[] = ['QB', 'RB', 'WR', 'TE'];\r\n\r\n  /**\r\n   * maps players to sleeper id's on rosters\r\n   * @param teams\r\n   * @param players\r\n   */\r\n  mapPowerRankings(teams: SleeperTeam[], players: KTCPlayer[]) {\r\n    try{\r\n      if (this.powerRankings.length === 0) {\r\n        teams.map((team) => {\r\n          const roster = [];\r\n          let sfTradeValueTotal = 0;\r\n          let tradeValueTotal = 0;\r\n          for (const sleeperId of team.roster?.players) {\r\n            for (const player of players) {\r\n              if (sleeperId === player.sleeper_id) {\r\n                roster.push(player);\r\n                sfTradeValueTotal += player.sf_trade_value;\r\n                tradeValueTotal += player.trade_value;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          const positionRoster: PositionPowerRanking[] = [];\r\n          for (const group of this.positionGroups) {\r\n            let sfTradeValue = 0;\r\n            let tradeValue = 0;\r\n            let groupList: KTCPlayer[] = [];\r\n            groupList = roster.filter(player => {\r\n              if (player.position === group) {\r\n                sfTradeValue += player.sf_trade_value;\r\n                tradeValue += player.trade_value;\r\n                return player;\r\n              }\r\n            });\r\n            positionRoster.push(new PositionPowerRanking(group, sfTradeValue, tradeValue, groupList));\r\n          }\r\n          const pickValues = players.filter(player => {\r\n            return player.position === 'PI';\r\n          });\r\n          const picks: KTCPlayer[] = [];\r\n          let sfPickTradeValue = 0;\r\n          let pickTradeValue = 0;\r\n          team.draftCapital.map(pick => {\r\n              for (const pickValue of pickValues) {\r\n                if (pickValue.last_name.includes(pick.round.toString()) && pickValue.first_name === pick.year) {\r\n                  if (pick.pick < 5 && pickValue.last_name.includes('Early')) {\r\n                    sfPickTradeValue += pickValue.sf_trade_value;\r\n                    pickTradeValue += pickValue.trade_value;\r\n                    sfTradeValueTotal += pickValue.sf_trade_value;\r\n                    tradeValueTotal += pickValue.trade_value;\r\n                    picks.push(pickValue);\r\n                    break;\r\n                  } else if (pick.pick > 8 && pickValue.last_name.includes('Late')) {\r\n                    sfPickTradeValue += pickValue.sf_trade_value;\r\n                    pickTradeValue += pickValue.trade_value;\r\n                    sfTradeValueTotal += pickValue.sf_trade_value;\r\n                    tradeValueTotal += pickValue.trade_value;\r\n                    picks.push(pickValue);\r\n                    break;\r\n                  } else if (pick.pick > 4 && pick.pick < 9 && pickValue.last_name.includes('Mid')) {\r\n                    sfPickTradeValue += pickValue.sf_trade_value;\r\n                    pickTradeValue += pickValue.trade_value;\r\n                    sfTradeValueTotal += pickValue.sf_trade_value;\r\n                    tradeValueTotal += pickValue.trade_value;\r\n                    picks.push(pickValue);\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          );\r\n          const rankedPicks = new PositionPowerRanking('PI', sfPickTradeValue, pickTradeValue, picks);\r\n          this.powerRankings.push(new TeamPowerRanking(team, positionRoster, sfTradeValueTotal, tradeValueTotal, rankedPicks));\r\n        });\r\n        this.rankTeams(this.sleeperService.selectedLeague.isSuperflex);\r\n      }\r\n    } catch(e: any) {\r\n      console.error('Error Mapping League Data: ', e)\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * sort position groups based on value\r\n   * @param isSuperflex\r\n   */\r\n  sortRosterByValue(isSuperflex: boolean) {\r\n    this.powerRankings.map(team => {\r\n      for (let group of team.roster) {\r\n        group.players.sort((a, b) => {\r\n          if (isSuperflex) {\r\n            return b.sf_trade_value - a.sf_trade_value;\r\n          } else {\r\n            return b.trade_value - a.trade_value;\r\n          }\r\n        });\r\n      }\r\n      team.picks.players.sort((a, b) => {\r\n        if (isSuperflex) {\r\n          return b.sf_trade_value - a.sf_trade_value;\r\n        } else {\r\n          return b.trade_value - a.trade_value;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * calulates and ranks teams based on trade value\r\n   * @param isSuperflex\r\n   */\r\n  rankTeams(isSuperflex: boolean) {\r\n    // Sort position groups and picks desc\r\n    this.sortRosterByValue(isSuperflex);\r\n    // Rank position groups\r\n    this.positionGroups.forEach((value, index) => {\r\n      this.powerRankings.sort((teamA, teamB) => {\r\n        if (isSuperflex) {\r\n          return teamB.roster[index].sfTradeValue - teamA.roster[index].sfTradeValue;\r\n        } else {\r\n          return teamB.roster[index].tradeValue - teamA.roster[index].tradeValue;\r\n        }\r\n      });\r\n      this.powerRankings.forEach((team, teamIndex) => {\r\n        team.roster[index].rank = teamIndex + 1;\r\n      });\r\n    });\r\n    // Rank picks\r\n    this.powerRankings.sort((teamA, teamB) => {\r\n      if(isSuperflex){\r\n        return teamB.picks.sfTradeValue - teamA.picks.sfTradeValue;\r\n      } else {\r\n        return teamB.picks.tradeValue - teamA.picks.tradeValue\r\n      }\r\n    });\r\n    this.powerRankings.forEach((team, teamIndex) => {\r\n      team.picks.rank = teamIndex + 1;\r\n    });\r\n    // calculate best starting lineup\r\n    this.calculateStarterValue();\r\n    // Rank starting lineups\r\n    this.powerRankings.sort((teamA, teamB) => {\r\n      if (isSuperflex) {\r\n        return teamB.sfTradeValueStarter - teamA.sfTradeValueStarter;\r\n      } else {\r\n        return teamB.tradeValueStarter - teamA.tradeValueStarter;\r\n      }\r\n    });\r\n    this.powerRankings.forEach((team, index) => {\r\n      team.starterRank = index + 1;\r\n    });\r\n    // rank overall points\r\n    this.powerRankings.sort((teamA, teamB) => {\r\n      if (isSuperflex) {\r\n        return teamB.sfTradeValueOverall - teamA.sfTradeValueOverall;\r\n      } else {\r\n        return teamB.tradeValueOverall - teamA.tradeValueOverall;\r\n      }\r\n    });\r\n    this.powerRankings.forEach((team, index) => {\r\n      team.overallRank = index + 1;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * calculates starters for teams\r\n   */\r\n  calculateStarterValue() {\r\n    const positionGroupCount: number[] = [];\r\n    for (const pos of this.positionGroups) {\r\n      positionGroupCount.push(this.getCountForPosition(pos));\r\n    }\r\n    positionGroupCount.push(this.getCountForPosition('FLEX'));\r\n    positionGroupCount.push(this.getCountForPosition('SUPER_FLEX'));\r\n    this.powerRankings.map(team => {\r\n      let teamRosterCount: number[] = positionGroupCount.slice();\r\n      if (teamRosterCount[0] > 0) //qb\r\n      {\r\n        team.starters.push(...team.roster[0].players.slice(0, teamRosterCount[0]));\r\n      }\r\n      if (teamRosterCount[1] > 0) // rb\r\n      {\r\n        team.starters.push(...team.roster[1].players.slice(0, teamRosterCount[1]));\r\n      }\r\n      if (teamRosterCount[2] > 0) // wr\r\n      {\r\n        team.starters.push(...team.roster[2].players.slice(0, teamRosterCount[2]));\r\n      }\r\n      if (teamRosterCount[3] > 0) // te\r\n      {\r\n        team.starters.push(...team.roster[3].players.slice(0, teamRosterCount[3]));\r\n      }\r\n      if (teamRosterCount[4] > 0) // flex\r\n      {\r\n        teamRosterCount = this.getBestAvailableFlex(teamRosterCount[4], teamRosterCount, team);\r\n      }\r\n      if (teamRosterCount[5] > 0) // flex\r\n      {\r\n        if (team.roster[0].players.length > teamRosterCount[0]) {\r\n          team.starters.push(team.roster[0].players[teamRosterCount[0]]);\r\n          teamRosterCount[0]++;\r\n        } else {\r\n          teamRosterCount = this.getBestAvailableFlex(teamRosterCount[5], teamRosterCount, team);\r\n        }\r\n      }\r\n      for (const starter of team.starters) {\r\n        team.sfTradeValueStarter += starter.sf_trade_value;\r\n        team.tradeValueStarter += starter.trade_value;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * determines the best available flex option for team by trade value\r\n   * @param spots\r\n   * @param teamRosterCount\r\n   * @param team\r\n   * @param isSuperFlex\r\n   * @private\r\n   */\r\n  private getBestAvailableFlex(spots: number, teamRosterCount: number[], team: TeamPowerRanking): number[] {\r\n    for (let i = 0; i < spots; i++) {\r\n      const topRb = team.roster[1]?.players[teamRosterCount[1]];\r\n      const topWr = team.roster[2]?.players[teamRosterCount[2]];\r\n      const topTe = team.roster[3]?.players[teamRosterCount[3]];\r\n      const flexPlayer = this.getBetterPlayer(topTe, this.getBetterPlayer(topRb, topWr));\r\n      if (flexPlayer) {\r\n        teamRosterCount[this.positionGroups.indexOf(flexPlayer.position)]++;\r\n        team.starters.push(flexPlayer);\r\n      }\r\n    }\r\n    return teamRosterCount;\r\n  }\r\n\r\n  /**\r\n   * determines which player has the higher value\r\n   * @param player1\r\n   * @param player2\r\n   * @private\r\n   */\r\n  private getBetterPlayer(player1: KTCPlayer, player2: KTCPlayer): KTCPlayer {\r\n    if (player1 && player2) {\r\n      if (this.sleeperService.selectedLeague.isSuperflex) {\r\n        if (player1.sf_trade_value > player2.sf_trade_value) {\r\n          return player1;\r\n        } else {\r\n          return player2;\r\n        }\r\n      } else {\r\n        if (player1.trade_value > player2.trade_value) {\r\n          return player1;\r\n        } else {\r\n          return player2;\r\n        }\r\n      }\r\n    } else if (player1) {\r\n      return player1;\r\n    } else {\r\n      return player2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculates the number of starter positions by position in league\r\n   * @param position\r\n   * @private\r\n   */\r\n  private getCountForPosition(position: string) {\r\n    return this.sleeperService.selectedLeague.rosterPositions.filter(x => x === position).length;\r\n  }\r\n\r\n  /**\r\n   * resets power rankings\r\n   */\r\n  reset() {\r\n    this.powerRankings = [];\r\n  }\r\n\r\n  getRankByTeam(selectedTeam: SleeperTeam, property = 'overallRank') {\r\n    for( let team of this.powerRankings) {\r\n      if(team.team.roster.rosterId == selectedTeam.roster.rosterId) {\r\n        return team[property];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {BaseChartDirective, Color, Label} from 'ng2-charts';\nimport {ChartDataSets, ChartOptions} from 'chart.js';\nimport {PlayerComparisonService} from '../../services/player-comparison.service';\nimport {BaseComponent} from '../../base-component.abstract';\nimport 'chartjs-plugin-colorschemes/src/plugins/plugin.colorschemes';\nimport {Classic10} from 'chartjs-plugin-colorschemes/src/colorschemes/colorschemes.tableau';\n\n\n@Component({\n  selector: 'app-trade-value-line-chart',\n  templateUrl: './trade-value-line-chart.component.html',\n  styleUrls: ['./trade-value-line-chart.component.css']\n})\nexport class TradeValueLineChartComponent extends BaseComponent implements OnInit {\n\n  @ViewChild(BaseChartDirective, {static: true}) chart: BaseChartDirective;\n\n  selectedDateFilter: string = 'alltime';\n\n  public lineChartOptions: (ChartOptions & { annotation?: any }) = {\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      intersect: false,\n      mode: 'index',\n      position: 'nearest',\n    },\n    scales: {\n      xAxes: [{\n        display: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Date',\n          fontColor: '#d3d3d3'\n        }\n      }],\n      yAxes: [{\n        display: true,\n        gridLines: {\n          display: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Trade Value',\n          fontColor: '#d3d3d3'\n        }\n      }]\n    },\n    legend: {\n      labels: {\n        fontColor: '#d3d3d3'\n      }\n    },\n\n    plugins: {\n      colorschemes: {\n        scheme: Classic10,\n        override: true\n      },\n      legend: {\n        position: 'top'\n      }\n    }\n  };\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n  public lineChartPlugins = [];\n\n  constructor(public playerComparisonService: PlayerComparisonService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.updateTable();\n    this.addSubscriptions(this.playerComparisonService.$updatePlayer.subscribe((player) => {\n      setTimeout(() => {\n        if (this.chart && this.chart.chart) {\n          for (let dataset of this.playerComparisonService.lineChartData) {\n            dataset.fill = this.playerComparisonService.lineChartData.length < 4;\n          }\n          this.chart.chart.config.data.datasets = this.playerComparisonService.lineChartData;\n          this.chart.chart.options.legend.position = 'top';\n          this.chart.updateColors();\n          this.chart.chart.update();\n        }\n      });\n    }));\n  }\n\n  updateTable() {\n    this.playerComparisonService.lineChartLabels = [];\n    let displayDays;\n    switch (this.selectedDateFilter) {\n      case 'alltime':\n        displayDays = this.calculateAllTime();\n        break;\n      case 'month':\n        displayDays = 30;\n        break;\n      case '2week':\n        displayDays = 14;\n        break;\n      default:\n        displayDays = 7;\n        break;\n    }\n    for (let i = 0; i < displayDays + 1; i++) {\n      const today = new Date();\n      const yesterday = new Date(today);\n      yesterday.setDate(yesterday.getDate() - (displayDays - i));\n      this.playerComparisonService.lineChartLabels.push(yesterday.toISOString().slice(0, 10));\n    }\n    this.playerComparisonService.refreshTable();\n  }\n\n  private calculateAllTime(): number {\n    const oneDay = 24 * 60 * 60 * 1000;\n    const firstDate = new Date();\n    const secondDate = new Date('2021-04-16T12:00:00');\n\n    const diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n    return diffDays;\n  }\n}\n","<div>\n  <div>\n    <mat-button-toggle-group [(ngModel)]=\"selectedDateFilter\" (change)=\"updateTable()\" class=\"margin-bot-20\"\n                             style=\"overflow: auto\">\n      <mat-button-toggle value=\"alltime\">All-time</mat-button-toggle>\n      <mat-button-toggle value=\"month\">A Month</mat-button-toggle>\n      <mat-button-toggle value=\"2week\">2 Weeks</mat-button-toggle>\n      <mat-button-toggle value=\"week\">A Week</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n\n  <div style=\"display: block;\">\n    <canvas baseChart width=\"600\" height=\"400\"\n            [datasets]=\"playerComparisonService.lineChartData\"\n            [labels]=\"playerComparisonService.lineChartLabels\"\n            [options]=\"lineChartOptions\"\n            [legend]=\"lineChartLegend\"\n            [chartType]=\"lineChartType\"\n            [plugins]=\"lineChartPlugins\">\n    </canvas>\n  </div>\n</div>\n","import {Injectable, OnDestroy} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BaseComponent implements OnDestroy {\r\n  /**\r\n   * List of components subscribed to\r\n   */\r\n  protected subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * deletes each subscription for component\r\n   * if your child component still needs to use ngOnDestroy,\r\n   * add a call to super.ngOnDestroy() to run\r\n   */\r\n  public ngOnDestroy(): void {\r\n    for (const subscription of this.subscriptions) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /** add subscription to list\r\n   * Whenever there's a sub in a class just add this.addSubscription\r\n   * @param subs list of subscriptions\r\n   * @protected\r\n   */\r\n  protected addSubscriptions(...subs: Subscription[]) {\r\n    this.subscriptions.push(...subs);\r\n  }\r\n}\r\n","import {APP_INITIALIZER, NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport {EndpointsService} from './services/endpoints.service';\nimport {ConfigService} from './services/init/config.service';\nimport {StartupService} from './services/init/startup.service';\nimport { HomeComponent } from './components/home/home.component';\nimport { PowerRankingsComponent } from './components/power-rankings/power-rankings.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport { HeaderComponent } from './components/header/header.component';\nimport {NgxSpinnerModule} from \"ngx-spinner\";\nimport { KtcTableComponent } from './components/player-values/ktc-table/ktc-table.component';\nimport { PlayerValuesComponent } from './components/player-values/player-values.component';\n\n\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { PowerRankingsTableComponent } from './components/power-rankings/power-rankings-table/power-rankings-table.component';\nimport { DraftComponent } from './components/draft/draft.component';\nimport { DraftTableComponent } from './components/draft/draft-table/draft-table.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { PlayoffCalculatorComponent } from './components/playoff-calculator/playoff-calculator.component';\nimport { ScheduleComparisonComponent } from './components/playoff-calculator/schedule-comparison/schedule-comparison.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { WeeklyRecordVsAllComponent } from './components/playoff-calculator/weekly-record-vs-all/weekly-record-vs-all.component';\nimport { CompletedDraftTableComponent } from './components/draft/completed-draft-table/completed-draft-table.component';\nimport { PlayerComparisonsComponent } from './components/player-comparisons/player-comparisons.component';\nimport {ChartsModule} from 'ng2-charts';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {\n  AddPlayerComparisonModalComponent\n} from './components/modals/add-player-comparison-modal/add-player-comparison-modal.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { TradeValueLineChartComponent } from './components/player-comparisons/trade-value-line-chart/trade-value-line-chart.component';\nimport 'chartjs-plugin-colorschemes';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { PlayerDetailsComponent } from './components/player-details/player-details.component';\nimport {MatCardModule} from '@angular/material/card';\nimport { PlayerDetailsWeeklyStatsLineChartComponent } from './components/player-details/player-details-weekly-stats-line-chart/player-details-weekly-stats-line-chart.component';\nimport { PlayerDetailsWeeklyBoxScoresTableComponent } from './components/player-details/player-details-weekly-box-scores-table/player-details-weekly-box-scores-table.component';\nimport { FantasyTeamDetailsComponent } from './components/fantasy-team-details/fantasy-team-details.component';\nimport {PowerRankingsChartComponent} from './components/power-rankings/power-rankings-chart/power-rankings-chart.component';\nimport { FantasyTeamDetailsWeeklyPointsChartComponent } from './components/fantasy-team-details/fantasy-team-details-weekly-points-chart/fantasy-team-details-weekly-points-chart.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\nexport function initialize(startupService: StartupService) {\n  return (): Promise<any> => {\n    return startupService.startupApplication();\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PowerRankingsComponent,\n    HeaderComponent,\n    KtcTableComponent,\n    PlayerValuesComponent,\n    PowerRankingsTableComponent,\n    DraftComponent,\n    DraftTableComponent,\n    PlayoffCalculatorComponent,\n    ScheduleComparisonComponent,\n    WeeklyRecordVsAllComponent,\n    CompletedDraftTableComponent,\n    PlayerComparisonsComponent,\n    AddPlayerComparisonModalComponent,\n    TradeValueLineChartComponent,\n    PlayerDetailsComponent,\n    PowerRankingsChartComponent,\n    PlayerDetailsWeeklyStatsLineChartComponent,\n    PlayerDetailsWeeklyBoxScoresTableComponent,\n    FantasyTeamDetailsComponent,\n    FantasyTeamDetailsWeeklyPointsChartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    NgxSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatBadgeModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    ChartsModule,\n    MatChipsModule,\n    MatDialogModule,\n    DragDropModule,\n    MatTooltipModule,\n    MatCardModule,\n    FlexLayoutModule,\n  ],\n  providers: [EndpointsService,\n    ConfigService,\n    StartupService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initialize,\n      deps: [StartupService],\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {KTCPlayer} from '../../model/KTCPlayer';\r\nimport {TeamPowerRanking} from './powerRankings';\r\n\r\nexport class TeamMockDraftPick {\r\n  constructor(number: number, display: string, ownerName: string, teamName: string) {\r\n    this.pick = number;\r\n    this.pickdisplay = display;\r\n    this.pickOwner = ownerName;\r\n    this.pickTeam = teamName;\r\n  }\r\n\r\n  pickOwner: string;\r\n  pickTeam: string;\r\n  pickdisplay: string;\r\n  pick: number;\r\n}\r\n","import {SleeperTeam} from '../../model/SleeperLeague';\r\n\r\nexport class Division {\r\n  constructor(number: number, divisionTeams: any[]) {\r\n    this.divisionId = number;\r\n    this.teams = divisionTeams\r\n  }\r\n\r\n  divisionId: number;\r\n  divisionName: string;\r\n  teams: SleeperTeam[];\r\n}\r\n","<div class=\"margin-top-10 large-bold-header-text center-text\">Playoff Calculator</div>\n<div class=\"center-text margin-top-10\">\n  Team standings from the league with points for and realized points. Realized points is calculated by dividing the actual points for and the max potential points for.\n</div>\n<div *ngIf=\"sleeperService.leagueLoaded && playoffCalculatorService.divisions.length > 0 && (sleeperService.selectedLeague?.status !== 'pre_draft' && sleeperService.selectedLeague?.status !== 'drafting')\" class=\"margin-top-10\">\n  <div class=\"standings-row\">\n    <div *ngFor=\"let division of playoffCalculatorService.divisions\" class=\"standings-col\">\n    <span\n      class=\"center-text mid-bold-text\">{{sleeperService.selectedLeague.divisionNames[division.divisionId - 1]}}</span>\n      <mat-table [dataSource]=\"division.teams\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"teamName\">\n          <mat-header-cell *matHeaderCellDef>Team Name</mat-header-cell>\n          <mat-cell *matCellDef=\"let team\" class=\"link--text__no__underline\" [routerLink]=\"['../../team', team.owner.ownerName]\"> {{team.owner.teamName}} </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"record\">\n          <mat-header-cell *matHeaderCellDef>Record</mat-header-cell>\n          <mat-cell *matCellDef=\"let team\">{{team.roster.teamMetrics.wins}}\n            - {{team.roster.teamMetrics.losses}}{{team.roster.teamMetrics.ties > 0 ? ' - ' + team.roster.teamMetrics.ties : ''}}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pf\">\n          <mat-header-cell *matHeaderCellDef>Points For</mat-header-cell>\n          <mat-cell *matCellDef=\"let team\">{{roundNumber(team.roster.teamMetrics.fpts)}}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pot\">\n          <mat-header-cell *matHeaderCellDef>Realized Points</mat-header-cell>\n          <mat-cell *matCellDef=\"let team\"><span>{{getPointPotentialPercent(team) || '0'}}%</span></mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"divisionTableCols\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: divisionTableCols;\" [ngClass]=\"{'mat-table-highlight': row.roster.teamMetrics.rank <= sleeperService.selectedLeague.playoffTeams && row.roster.teamMetrics.wins > 0}\"></mat-row>\n      </mat-table>\n    </div>\n  </div>\n\n  <mat-tab-group mat-align-tabs=\"center\" class=\"margin-top-25\">\n    <mat-tab label=\"Schedule Comparison\">\n      <div class=\"mid-bold-text margin-top-10 center-text\">Schedule Comparisons</div>\n      <div class=\"margin-top-10 center-text\">Calculates what each teams record would be with the other team schedule. For games where the same team plays each-other, a win/loss is assigned if the team scored more than that weeks median</div>\n      <app-schedule-comparison></app-schedule-comparison>\n    </mat-tab>\n    <mat-tab label=\"Weekly Record Vs All\">\n      <div class=\"mid-bold-text margin-top-10 center-text\">Weekly Record Vs All Teams</div>\n      <div class=\"margin-top-10 center-text\">A team's record versus each team during that week. The table is sorted by most overall wins.</div>\n      <app-weekly-record-vs-all></app-weekly-record-vs-all>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n\n<div class=\"center-text margin-top-50\" *ngIf=\"!sleeperService.leagueLoaded && sleeperService.selectedLeague?.status !== 'pre_draft' && sleeperService.selectedLeague?.status !== 'drafting'\">\n  <div class=\"warning__alert\">Cannot generate league analytics cause no league was selected. Please select a league.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose League</button>\n</div>\n\n<div class=\"center-text margin-top-50\" *ngIf=\"sleeperService.selectedLeague?.status === 'pre_draft' || sleeperService.selectedLeague?.status === 'drafting'\">\n  <div class=\"warning__alert\">Cannot generate league analytics because season hasn't started yet. Please select a different league or year.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose League</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {PlayoffCalculatorService} from '../services/playoff-calculator.service';\nimport {SleeperTeam} from '../../model/SleeperLeague';\nimport {MatchupService} from '../services/matchup.service';\n\n@Component({\n  selector: 'app-playoff-calculator',\n  templateUrl: './playoff-calculator.component.html',\n  styleUrls: ['./playoff-calculator.component.css']\n})\nexport class PlayoffCalculatorComponent implements OnInit {\n\n  constructor(public sleeperService: SleeperService, public playoffCalculatorService: PlayoffCalculatorService, public matchupService: MatchupService) { }\n\n  divisionTableCols = ['teamName', 'record', 'pf',\t'pot']\n\n  ngOnInit(): void {\n    if(this.sleeperService.leagueLoaded) {\n      this.matchupService.initMatchUpCharts(this.sleeperService.selectedLeague)\n      this.playoffCalculatorService.generateDivisions(this.sleeperService.selectedLeague, this.sleeperService.sleeperTeamDetails)\n      console.log(this.sleeperService.selectedLeague)\n    }\n  }\n\n  roundNumber(num: number): number {\n    return Math.round(num);\n  }\n\n  getPointPotentialPercent(team: SleeperTeam) {\n    return Math.round(team.roster.teamMetrics.fpts/team.roster.teamMetrics.ppts * 100);\n  }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Color, Label} from 'ng2-charts';\nimport {ChartDataSets, ChartOptions} from 'chart.js';\nimport {KTCApiService} from '../../services/api/ktc-api.service';\nimport {PlayerService} from '../../services/player.service';\nimport {KTCPlayer} from '../../model/KTCPlayer';\nimport {BaseComponent} from '../base-component.abstract';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {FormControl} from '@angular/forms';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {debounce, debounceTime, distinctUntilChanged, map, startWith} from 'rxjs/operators';\nimport {fromEvent, Observable, of, Subject} from 'rxjs';\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\nimport {AddPlayerComparisonModalComponent} from '../modals/add-player-comparison-modal/add-player-comparison-modal.component';\nimport {PlayerComparisonService} from '../services/player-comparison.service';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-player-comparisons',\n  templateUrl: './player-comparisons.component.html',\n  styleUrls: ['./player-comparisons.component.css']\n})\nexport class PlayerComparisonsComponent extends BaseComponent implements OnInit {\n\n  constructor(private ktcApiService: KTCApiService, private playerService: PlayerService, private sleeperService: SleeperService, private dialog: MatDialog, public playerComparisonService: PlayerComparisonService) {\n    super();\n  }\n\n  ngOnInit() {\n    if(this.sleeperService.leagueLoaded) {\n      this.playerComparisonService.isSuperFlex = this.sleeperService.selectedLeague.isSuperflex\n    }\n    this.playerService.loadPlayerValuesForToday();\n    this.addSubscriptions(this.playerService.$currentPlayerValuesLoaded.subscribe(() => {\n      if(this.playerComparisonService.lineChartData.length == 1  && this.playerComparisonService.selectedPlayers[0] === undefined) {\n        this.playerComparisonService.addPlayerToCharts(this.playerService.playerValues[this.getRandomPlayer(true)])\n        this.playerComparisonService.addPlayerToCharts(this.playerService.playerValues[this.getRandomPlayer(true)])\n      }\n    }));\n    if(this.playerComparisonService.selectedPlayers.length == 0 && this.playerService.playerValues.length > 0) {\n      this.playerComparisonService.addPlayerToCharts(this.playerService.playerValues[this.getRandomPlayer(true)])\n      this.playerComparisonService.addPlayerToCharts(this.playerService.playerValues[this.getRandomPlayer(true)])\n    }\n  }\n\n  private getRandomPlayer(stars: boolean = false): number {\n    return Math.floor(Math.random() * (stars ? 50 : this.playerService.playerValues.length-1)) + 1\n  }\n\n  addRandomPlayer() {\n    this.playerComparisonService.addPlayerToCharts(this.playerService.playerValues[this.getRandomPlayer()])\n    if(this.playerComparisonService.isGroupMode) {\n      this.playerComparisonService.addPlayerToCharts(this.playerService.playerValues[this.getRandomPlayer()], true)\n    }\n  }\n\n  addNewPlayerModal(isGroup2: boolean = false) {\n    this.dialog.open(AddPlayerComparisonModalComponent, {\n      height: '550px',\n      width: '600px',\n      data: {\n        isGroup2: isGroup2,\n      }\n    });\n  }\n\n  /**\n   * reorder players\n   * @param event\n   */\n  drop(event: any) {\n    if (event.previousIndex !== event.currentIndex && !this.playerComparisonService.isGroupMode) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      this.playerComparisonService.refreshTable()\n    }\n  }\n\n}\n","<div class=\"table-container\">\n  <div class=\"margin-top-10 large-bold-header-text center-text\">Player Value Comparisons</div>\n  <div class=\"center-text margin-top-10\">\n    Player values are scraped from <a class=\"info__alert\" href=\"https://keeptradecut.com/\" target=\"_blank\">KeepTradeCut.com</a>\n    dynasty rankings calculated from over <span class=\"info__alert\">600,000+</span> data points.\n    <div>The scoring is <span class=\"info__alert\">0.5 PPR</span>, the table below will update depending on whether your\n      league is Superflex or not.\n    </div>\n  </div>\n\n  <div class=\"margin-top-25\">\n    <div class=\"button-left\">\n      <button mat-raised-button color=\"accent\" (click)=\"addNewPlayerModal()\"><mat-icon class=\"add-icon-button\">add</mat-icon> Players {{playerComparisonService.isGroupMode ? 'to Group 1' : ''}}</button>\n      <mat-slide-toggle color=\"primary\"\n                        [(ngModel)]=\"playerComparisonService.isGroupMode\"\n                        (change)=\"playerComparisonService.toggleGroupMode()\" class=\"player-value-checkbox-margin\">\n        Enable Groups\n      </mat-slide-toggle>\n    </div>\n    <span class=\"container_spacer\"></span>\n    <span class=\"button-right\">\n      <mat-slide-toggle color=\"primary\" class=\"player-value-checkbox-margin\"\n                        [(ngModel)]=\"playerComparisonService.isSuperFlex\"\n                        (change)=\"playerComparisonService.refreshTable()\" class=\"player-value-checkbox-margin\">\n      SuperFlex\n      </mat-slide-toggle>\n      <button mat-raised-button (click)=\"addRandomPlayer()\" class=\"player-value-checkbox-margin\"><mat-icon class=\"add-icon-button\">add</mat-icon> Random Player</button>\n    </span>\n  </div>\n\n  <div class=\"margin-top-10\">\n    <mat-chip-list *ngIf=\"playerComparisonService.selectedPlayers.length !== 0\"\n                   cdkDropList\n                   cdkDropListOrientation=\"horizontal\"\n                   [cdkDropListData]=\"playerComparisonService.selectedPlayers\"\n                   (cdkDropListDropped)=\"drop($event)\">\n      <mat-chip cdkDrag *ngFor=\"let player of playerComparisonService.selectedPlayers\"\n                (removed)=\"playerComparisonService.onRemove(player)\">{{player.name}}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n\n  <div class=\"margin-top-25\" *ngIf=\"playerComparisonService.isGroupMode\">\n    <div class=\"button-left\">\n      <button mat-raised-button color=\"accent\" (click)=\"addNewPlayerModal(true)\"><mat-icon class=\"add-icon-button\">add</mat-icon> Players to Group 2</button>\n    </div>\n  </div>\n\n  <div class=\"margin-top-10\" *ngIf=\"playerComparisonService.isGroupMode\">\n    <mat-chip-list *ngIf=\"playerComparisonService.group2SelectedPlayers.length !== 0\"\n                   cdkDropList\n                   cdkDropListOrientation=\"horizontal\"\n                   [cdkDropListData]=\"playerComparisonService.group2SelectedPlayers\"\n                   (cdkDropListDropped)=\"drop($event)\">\n      <mat-chip cdkDrag *ngFor=\"let player of playerComparisonService.group2SelectedPlayers\"\n                (removed)=\"playerComparisonService.onRemove(player, true)\">{{player.name}}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n\n  <div class=\"margin-top-50\">\n    <app-trade-value-line-chart></app-trade-value-line-chart>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {CompletedDraft, DraftCapital, SleeperData, SleeperLeagueData, SleeperUserData} from '../model/SleeperUser';\r\nimport {SleeperApiService} from './api/sleeper/sleeper-api.service';\r\nimport {NgxSpinnerService} from 'ngx-spinner';\r\nimport {\r\n  SleeperCompletedPickData,\r\n  SleeperOwnerData,\r\n  SleeperRawDraftOrderData,\r\n  SleeperRawTradePicksData,\r\n  SleeperRosterData,\r\n  SleeperTeam, SleeperTeamMatchUpData,\r\n} from '../model/SleeperLeague';\r\nimport {forkJoin, Observable, of, Subject} from 'rxjs';\r\nimport {delay, mergeMap} from 'rxjs/operators';\r\nimport {resolve} from '@angular/compiler-cli/src/ngtsc/file_system';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SleeperService {\r\n\r\n  sleeperUser: SleeperData;\r\n\r\n  selectedLeague: SleeperLeagueData;\r\n\r\n  selectedYear: string;\r\n\r\n  leagueLoaded: boolean = false;\r\n\r\n  sleeperTeamDetails: SleeperTeam[];\r\n\r\n  upcomingDrafts: SleeperRawDraftOrderData[] = [];\r\n\r\n  completedDrafts: CompletedDraft[] = [];\r\n\r\n  constructor(private sleeperApiService: SleeperApiService, private spinner: NgxSpinnerService) {\r\n  }\r\n\r\n  /**\r\n   * loads team data, roster, and draft picks by league\r\n   * @param selectedLeague\r\n   */\r\n  $loadNewLeague(selectedLeague: SleeperLeagueData): Observable<any> {\r\n    this.leagueLoaded = false;\r\n    this.selectedLeague = selectedLeague;\r\n    if (this.selectedLeague.rosterPositions.filter(x => x === 'QB').length > 1) {\r\n      this.selectedLeague.isSuperflex = true;\r\n    }\r\n    return this.sleeperApiService.getSleeperOwnersbyLeagueId(selectedLeague.leagueId).pipe(mergeMap((owners: SleeperOwnerData[]) => {\r\n        // fetch matchUps for league\r\n        let leagueMatchups = {};\r\n        const observe = [];\r\n        for (let weekNum = selectedLeague.startWeek; weekNum < 19; weekNum++) {\r\n          observe.push(this.sleeperApiService.getSleeperMatchUpsForWeekByLeagueId(selectedLeague.leagueId, weekNum).pipe(mergeMap((weekMatchups) => {\r\n            const matchupData: SleeperTeamMatchUpData[] = [];\r\n            for (let matchup of weekMatchups) {\r\n              matchupData.push(new SleeperTeamMatchUpData(matchup));\r\n            }\r\n            leagueMatchups[weekNum] = matchupData;\r\n            return of(weekMatchups);\r\n          })));\r\n        }\r\n        forkJoin(observe).subscribe(() => {\r\n            this.selectedLeague.leagueMatchUps = leagueMatchups;\r\n            return of();\r\n          }\r\n        );\r\n        // fetch rosters and drafts picks\r\n        return this.sleeperApiService.getSleeperRostersbyLeagueId(selectedLeague.leagueId).pipe(mergeMap((rosters: SleeperRosterData[]) => {\r\n            console.log('Fetching Roster Ids...');\r\n            this.sleeperTeamDetails = [];\r\n            rosters.map(roster => {\r\n              for (const owner of owners) {\r\n                if (roster.ownerId == owner.userId) {\r\n                  this.sleeperTeamDetails.push(new SleeperTeam(owner, roster));\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n            return this.sleeperApiService.getSleeperDraftbyLeagueId(selectedLeague.leagueId).pipe(mergeMap((draftIds: string[]) => {\r\n              draftIds.map((draftId: string) => {\r\n                  console.log('processing draft:', draftId);\r\n                  return this.$assignPicks(draftId).subscribe((x) => {\r\n                      return of(x);\r\n                    }\r\n                  );\r\n                }\r\n              );\r\n              return of(this.sleeperTeamDetails);\r\n            }));\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * loads new user data from sleeper username\r\n   * @param userName\r\n   */\r\n  loadNewUser(userName: string, year: string) {\r\n    this.spinner.show();\r\n    console.time('Fetch Sleeper User Data');\r\n    this.selectedYear = year;\r\n    try {\r\n      this.sleeperApiService.getSleeperUserInformation(userName).subscribe((userData: SleeperUserData) => {\r\n        if (userData == null) {\r\n          this.spinner.hide();\r\n          this.sleeperUser = null;\r\n          throw new Error('User data could not be found. Try again!');\r\n        }\r\n        this.sleeperApiService.getSleeperLeaguesByUserID(userData.user_id, year).subscribe((response: SleeperLeagueData[]) => {\r\n          this.sleeperUser = {leagues: response, userData: userData};\r\n          this.spinner.hide();\r\n          console.timeEnd('Fetch Sleeper User Data');\r\n        });\r\n      });\r\n    } catch (e: any) {\r\n      this.spinner.hide();\r\n      console.error('Failed to get data for user ', e);\r\n    }\r\n  }\r\n\r\n  private $assignPicks(draftId: string): Observable<SleeperTeam[]> {\r\n    return this.sleeperApiService.getSleeperDraftDetailsByDraftId(draftId).pipe(mergeMap((draft: SleeperRawDraftOrderData) => {\r\n      if (draft.status === 'pre_draft' && draft.draftOrder) {\r\n        this.upcomingDrafts.push(draft);\r\n        return this.sleeperApiService.getSleeperTradedPicksByDraftId(draft.draftId).pipe(mergeMap((tradedPicks: SleeperRawTradePicksData[]) => {\r\n          this.sleeperTeamDetails.map((team: SleeperTeam) => {\r\n            let draftPicks: DraftCapital[] = [];\r\n            const slot = draft.draftOrder[team.owner.userId];\r\n            for (let i = 0; i < draft.rounds; i++) {\r\n              let slotPick = slot;\r\n              if (draft.type == 'snake' && i + 1 % 2 == 0) {\r\n                slotPick = this.selectedLeague.totalRosters - slot;\r\n              }\r\n              draftPicks.push(new DraftCapital(true, i + 1, Number(slot), draft.season));\r\n            }\r\n            const rosterId = draft.slotToRosterId[slot];\r\n            tradedPicks.reverse();\r\n            tradedPicks.map((tradedPick: SleeperRawTradePicksData) => {\r\n              if (tradedPick.rosterId == rosterId && tradedPick.ownerId !== rosterId) {\r\n                const index = draftPicks.map((i) => i.round).indexOf(tradedPick.round);\r\n                draftPicks.splice(index, 1);\r\n              } else if (tradedPick.ownerId == rosterId) {\r\n                let pickSlot = Number(Object.keys(draft.slotToRosterId).find(key => draft.slotToRosterId[key] === tradedPick.rosterId));\r\n                if (draft.type == 'snake' && tradedPick.round % 2 == 0) {\r\n                  pickSlot = this.selectedLeague.totalRosters - pickSlot;\r\n                }\r\n                if (!this.doesPickAlreadyExist(tradedPick, draftPicks, pickSlot)) {\r\n                  draftPicks.push(new DraftCapital(false, tradedPick.round, pickSlot, tradedPick.season));\r\n                }\r\n              }\r\n            });\r\n            team.draftCapital = draftPicks;\r\n          });\r\n          return of(this.sleeperTeamDetails);\r\n        }));\r\n      }\r\n      if (draft.status === 'complete' && draft.draftOrder) {\r\n        return this.sleeperApiService.getSleeperCompletedDraftsByDraftId(draft.draftId).pipe(mergeMap((picks) => {\r\n          return this.sleeperApiService.getSleeperTradedPicksByDraftId(draft.draftId).pipe(mergeMap((tradedPicks: SleeperRawTradePicksData[]) => {\r\n            tradedPicks.map((tradedPick: SleeperRawTradePicksData) => {\r\n              picks.filter(pick => {\r\n                if (pick.round === tradedPick.round && tradedPick.previousOwnerId === pick.rosterId) {\r\n                  pick.rosterId = tradedPick.rosterId;\r\n                }\r\n              });\r\n            });\r\n            this.completedDrafts.push(new CompletedDraft(draft, picks));\r\n            return of(this.sleeperTeamDetails);\r\n          }));\r\n          return of(this.sleeperTeamDetails);\r\n        }));\r\n      }\r\n      return of(this.sleeperTeamDetails);\r\n    }));\r\n  }\r\n\r\n  resetLeague() {\r\n    this.leagueLoaded = false;\r\n    this.selectedLeague = null;\r\n    this.sleeperTeamDetails = [];\r\n    this.completedDrafts = [];\r\n    this.upcomingDrafts = [];\r\n  }\r\n\r\n  private doesPickAlreadyExist(tradedPick: SleeperRawTradePicksData, draftPicks: DraftCapital[], pickNumber: number): boolean {\r\n    for (const pick of draftPicks) {\r\n      if (pick.round === tradedPick.round && pick.pick === pickNumber) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getTeamByRosterId(rosterId) {\r\n    for(let team of this.sleeperTeamDetails) {\r\n      if(team.roster.rosterId == rosterId) {\r\n        return team;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SleeperApiConfigService {\r\n\r\n  private _getSleeperUsernameEndpoint = '';\r\n\r\n  private _getSleeperLeagueEndpoint = '';\r\n\r\n  private _getSleeperDraftEndpoint = '';\r\n\r\n  private _getSleeperStatsEndpoint = '';\r\n\r\n  private _getSleeperNFLStateEndpoint = '';\r\n\r\n  private _getSleeperProjectionsEndpoint = '';\r\n\r\n  get getSleeperUsernameEndpoint(): string {\r\n    return this._getSleeperUsernameEndpoint;\r\n  }\r\n\r\n  set getSleeperUsernameEndpoint(value: string) {\r\n    this._getSleeperUsernameEndpoint = value;\r\n  }\r\n\r\n  get getSleeperLeagueEndpoint(): string {\r\n    return this._getSleeperLeagueEndpoint;\r\n  }\r\n\r\n  set getSleeperLeagueEndpoint(value: string) {\r\n    this._getSleeperLeagueEndpoint = value;\r\n  }\r\n\r\n  get getSleeperDraftEndpoint(): string {\r\n    return this._getSleeperDraftEndpoint;\r\n  }\r\n\r\n  set getSleeperDraftEndpoint(value: string) {\r\n    this._getSleeperDraftEndpoint = value;\r\n  }\r\n\r\n  get getSleeperStatsEndpoint(): string {\r\n    return this._getSleeperStatsEndpoint;\r\n  }\r\n\r\n  set getSleeperStatsEndpoint(value: string) {\r\n    this._getSleeperStatsEndpoint = value;\r\n  }\r\n\r\n  get getSleeperNFLStateEndpoint(): string {\r\n    return this._getSleeperNFLStateEndpoint;\r\n  }\r\n\r\n  set getSleeperNFLStateEndpoint(value: string) {\r\n    this._getSleeperNFLStateEndpoint = value;\r\n  }\r\n\r\n  get getSleeperProjectionsEndpoint(): string {\r\n    return this._getSleeperProjectionsEndpoint;\r\n  }\r\n\r\n  set getSleeperProjectionsEndpoint(value: string) {\r\n    this._getSleeperProjectionsEndpoint = value;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SleeperLeagueData} from '../../model/SleeperUser';\r\nimport {generateAnalysis} from '@angular/compiler-cli/src/ngtsc/indexer';\r\nimport {ScheduleComp, WeeklyRecordComp} from '../model/matchup';\r\nimport {SleeperTeam} from '../../model/SleeperLeague';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatchupService {\r\n\r\n  scheduleComparison: ScheduleComp[] = [];\r\n\r\n  weeklyComparison: WeeklyRecordComp[] = [];\r\n\r\n  /**\r\n   * initializes matchup data\r\n   * @param selectedLeague\r\n   */\r\n  initMatchUpCharts(selectedLeague: SleeperLeagueData) {\r\n    this.generateWeeklyRecords(selectedLeague);\r\n    this.generateScheduleComparison(selectedLeague);\r\n  }\r\n\r\n  generateWeeklyRecords(selectedLeague: SleeperLeagueData) {\r\n    if (this.weeklyComparison.length === 0) {\r\n      for (let rosterId = 1; rosterId < selectedLeague.totalRosters + 1; rosterId++) {\r\n        this.weeklyComparison.push(this.calculateWeeklyRecordsForTeam(selectedLeague, rosterId));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * generates schedule comparison\r\n   * @param selectedLeague\r\n   */\r\n  generateScheduleComparison(selectedLeague: SleeperLeagueData) {\r\n    if (this.scheduleComparison.length === 0) {\r\n      for (let rosterId = 1; rosterId < selectedLeague.totalRosters + 1; rosterId++) {\r\n        this.scheduleComparison.push(new ScheduleComp(rosterId, this.calculateScheduleForTeam(selectedLeague, rosterId)));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculates schedule comparison for team\r\n   * @param selectedLeague\r\n   * @param rosterId\r\n   */\r\n  calculateScheduleForTeam(selectedLeague: SleeperLeagueData, rosterId: number) {\r\n    const schedule = {};\r\n    for (let selectedRosterId = 1; selectedRosterId < selectedLeague.totalRosters + 1; selectedRosterId++) {\r\n      let wins = 0;\r\n      let losses = 0;\r\n      let ties = 0;\r\n      for (let week = selectedLeague.startWeek; week < selectedLeague.playoffStartWeek; week++) {\r\n        let matchUpId = 0;\r\n        let teamPoints = 0;\r\n        let totalPoints = 0;\r\n        if (selectedLeague.leagueMatchUps[week] !== undefined) {\r\n          for (let matchup of selectedLeague.leagueMatchUps[week]) {\r\n            totalPoints += matchup.points;\r\n            if (matchup.rosterId === selectedRosterId) {\r\n              matchUpId = matchup.matchupId;\r\n            }\r\n            if (matchup.rosterId === rosterId) {\r\n              teamPoints = matchup.points;\r\n            }\r\n          }\r\n          for (let opponent of selectedLeague.leagueMatchUps[week]) {\r\n            if (matchUpId === opponent.matchupId && opponent.rosterId !== selectedRosterId) {\r\n              if (opponent.points > teamPoints) {\r\n                losses++;\r\n              } else if (opponent.points < teamPoints) {\r\n                wins++;\r\n              } else if(teamPoints !== 0) {\r\n                if (opponent.rosterId == rosterId) {\r\n                  if (totalPoints / selectedLeague.totalRosters > teamPoints) {\r\n                    losses++;\r\n                  } else if (totalPoints / selectedLeague.totalRosters <= teamPoints) {\r\n                    wins++;\r\n                  }\r\n                } else {\r\n                  ties++;\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      schedule[selectedRosterId] = [wins, losses, ties];\r\n    }\r\n    return schedule;\r\n  }\r\n\r\n  private calculateWeeklyRecordsForTeam(selectedLeague: SleeperLeagueData, rosterId: number) {\r\n    const weeklyRecords = {};\r\n    let totalWins = 0, totalLosses = 0, totalTies = 0;\r\n    for (let week = selectedLeague.startWeek; week < selectedLeague.playoffStartWeek; week++) {\r\n      let wins = 0, losses = 0, ties = 0;\r\n      if(selectedLeague.leagueMatchUps[week] !== undefined) {\r\n        const teamPoints = selectedLeague.leagueMatchUps[week]?.filter(matchup => {\r\n          return matchup.rosterId === rosterId\r\n        })[0]?.points\r\n        for (let matchup of selectedLeague.leagueMatchUps[week]) {\r\n          if (matchup.rosterId !== rosterId) {\r\n            if (matchup.points > teamPoints) {\r\n              totalLosses++;\r\n              losses++;\r\n            } else if (matchup.points < teamPoints) {\r\n              totalWins++;\r\n              wins++;\r\n            } else if (matchup.points !== 0 && teamPoints !== 0)  {\r\n              totalTies++\r\n              ties++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      weeklyRecords[week] = [wins, losses, ties]\r\n    }\r\n    return new WeeklyRecordComp(rosterId, weeklyRecords, totalWins, totalLosses, totalTies);\r\n  }\r\n\r\n  getTeamName(col: string, teams: SleeperTeam[]): string {\r\n    for(let team of teams) {\r\n      if(team.roster.rosterId == col) {\r\n        return team.owner.teamName;\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.weeklyComparison = [];\r\n    this.scheduleComparison = [];\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {PowerRankingsService} from '../services/power-rankings.service';\nimport {PlayerService} from '../../services/player.service';\nimport {BaseComponent} from '../base-component.abstract';\nimport {MockDraftService} from '../services/mock-draft.service';\nimport {CompletedDraft} from '../../model/SleeperUser';\n\n@Component({\n  selector: 'app-draft',\n  templateUrl: './draft.component.html',\n  styleUrls: ['./draft.component.css']\n})\nexport class DraftComponent extends BaseComponent implements OnInit {\n  selectedDraft: CompletedDraft | string;\n\n  constructor(public sleeperService: SleeperService,\n              private playersService: PlayerService, public mockDraftService: MockDraftService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.sleeperService.selectedLeague && this.playersService.playerValues.length !== 0) {\n      this.initServices();\n    } else {\n      this.playersService.loadPlayerValuesForToday();\n    }\n    this.addSubscriptions(this.playersService.$currentPlayerValuesLoaded.subscribe(() => {\n        if (this.sleeperService.sleeperTeamDetails) {\n          this.initServices();\n        }\n      })\n    );\n  }\n\n  private initServices() {\n    this.mockDraftService.generateDraft(this.playersService.playerValues, this.sleeperService.selectedLeague.isSuperflex, this.sleeperService.upcomingDrafts[0]?.playerType);\n    this.mockDraftService.mapDraftObjects(this.sleeperService.sleeperTeamDetails);\n    if(this.mockDraftService.teamPicks.length > 0) {\n      this.selectedDraft = 'upcoming';\n    }\n  }\n\n}\n","<div class=\"margin-top-10 large-bold-header-text center-text\">Draft Center</div>\n<div class=\"center-text margin-top-10\">\n  View past drafts with current day values, or create a mock draft for upcoming draft with the new rookie class.\n</div>\n<div *ngIf=\"sleeperService.leagueLoaded && (mockDraftService.teamPicks.length > 0 || sleeperService.completedDrafts.length > 0)\" class=\"grid-100 button-right margin-top-10\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Select a Draft</mat-label>\n    <mat-select [(ngModel)]=\"selectedDraft\">\n      <mat-optgroup label=\"Upcoming\" *ngIf=\"mockDraftService.teamPicks.length > 0\">\n        <mat-option value=\"upcoming\">Mock Draft: {{mockDraftService.teamPicks.length/sleeperService.selectedLeague.totalRosters}} Rounds</mat-option>\n      </mat-optgroup>\n      <mat-optgroup label=\"Completed\" *ngIf=\"sleeperService.completedDrafts.length > 0\">\n        <mat-option *ngFor=\"let draft of sleeperService.completedDrafts\"\n                    [value]=\"draft\">Draft: {{draft.draft.season}} - {{draft.draft.rounds}} Rounds</mat-option>\n      </mat-optgroup>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div *ngIf=\"sleeperService.leagueLoaded\">\n  <div *ngIf=\"selectedDraft == 'upcoming'\" class=\"margin-top-25\">\n    <app-draft-table></app-draft-table>\n  </div>\n\n  <div *ngIf=\"selectedDraft && selectedDraft !== 'upcoming'\" class=\"margin-top-25\">\n    <app-completed-draft-table [selectedDraft]=\"selectedDraft\"></app-completed-draft-table>\n  </div>\n\n</div>\n\n<div class=\"center-text margin-top-50\" *ngIf=\"!sleeperService.leagueLoaded\">\n  <div class=\"warning__alert\">Cannot find drafts. Please select a league.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose League</button>\n</div>\n\n<div class=\"center-text margin-top-50\" *ngIf=\"mockDraftService.teamPicks.length == 0 && sleeperService.completedDrafts.length == 0 && sleeperService.leagueLoaded\">\n  <div class=\"warning__alert\">Cannot generate drafts. Please select a different year or league.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose Another League</button>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {PowerRankingsService} from '../services/power-rankings.service';\nimport {PlayerService} from '../../services/player.service';\nimport {BaseComponent} from '../base-component.abstract';\n\n@Component({\n  selector: 'app-power-rankings',\n  templateUrl: './power-rankings.component.html',\n  styleUrls: ['./power-rankings.component.css']\n})\nexport class PowerRankingsComponent extends BaseComponent implements OnInit {\n\n  constructor(public sleeperService: SleeperService, public powerRankingService: PowerRankingsService, private playersService: PlayerService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.sleeperService.leagueLoaded && this.playersService.playerValues.length !== 0) {\n      this.powerRankingService.mapPowerRankings(this.sleeperService.sleeperTeamDetails, this.playersService.playerValues);\n    } else {\n      this.playersService.loadPlayerValuesForToday();\n    }\n    this.addSubscriptions(this.playersService.$currentPlayerValuesLoaded.subscribe(() => {\n        if (this.sleeperService.sleeperTeamDetails) {\n          this.powerRankingService.mapPowerRankings(this.sleeperService.sleeperTeamDetails, this.playersService.playerValues);\n        }\n      })\n    );\n  }\n}\n","<div class=\"margin-top-10 large-bold-header-text center-text\">Team Power Rankings</div>\n<div class=\"center-text margin-top-10\">\n  Team power rankings are determined by <a class=\"info__alert\" href=\"https://keeptradecut.com/\" target=\"_blank\">KeepTradeCut.com</a> value calculations taken from over <span class=\"info__alert\">600,000+</span> data points.\n</div>\n\n<!--<div *ngIf=\"powerRankingService.powerRankings\">-->\n<!--  <app-power-rankings-card *ngFor=\"let team of powerRankingService.powerRankings\" [teamData]=\"team\"></app-power-rankings-card>-->\n<!--</div>-->\n<div  *ngIf=\"sleeperService.leagueLoaded && powerRankingService.powerRankings.length > 0\">\n  <app-power-rankings-chart></app-power-rankings-chart>\n\n  <app-power-rankings-table [powerRankings]=\"powerRankingService.powerRankings\" [isSuperFlex]=\"sleeperService.selectedLeague.isSuperflex\"></app-power-rankings-table>\n</div>\n\n<div class=\"center-text margin-top-50\" *ngIf=\"!sleeperService.leagueLoaded\">\n  <div class=\"warning__alert\">Cannot generate Power Rankings. Please select a league.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose League</button>\n</div>\n\n<div class=\"center-text margin-top-50\" *ngIf=\"sleeperService.leagueLoaded && powerRankingService.powerRankings.length === 0\">\n  <div class=\"warning__alert\">Error creating power rankings. Please select a different league.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose League</button>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {PowerRankingsComponent} from './components/power-rankings/power-rankings.component';\r\nimport {PlayerValuesComponent} from './components/player-values/player-values.component';\r\nimport {DraftComponent} from './components/draft/draft.component';\r\nimport {PlayoffCalculatorComponent} from './components/playoff-calculator/playoff-calculator.component';\r\nimport {PlayerComparisonsComponent} from './components/player-comparisons/player-comparisons.component';\r\nimport {PlayerDetailsComponent} from './components/player-details/player-details.component';\r\nimport {FantasyTeamDetailsComponent} from './components/fantasy-team-details/fantasy-team-details.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'players/values',\r\n    component: PlayerValuesComponent\r\n  },\r\n  {\r\n    path: 'players/comparison',\r\n    component: PlayerComparisonsComponent\r\n  },\r\n  {\r\n    path: 'players/details/:playerNameId',\r\n    component: PlayerDetailsComponent\r\n  },\r\n  {\r\n    path: 'league/team/:ownerName',\r\n    component: FantasyTeamDetailsComponent\r\n  },\r\n  {\r\n    path: 'league/rankings',\r\n    component: PowerRankingsComponent\r\n  },\r\n  {\r\n    path: 'league/playoff/calculator',\r\n    component: PlayoffCalculatorComponent\r\n  },\r\n  {\r\n    path: 'league/draft',\r\n    component: DraftComponent\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload', enableTracing: true})\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {PlayerService} from '../../../services/player.service';\nimport {KTCPlayer} from '../../../model/KTCPlayer';\nimport {KTCApiService} from '../../../services/api/ktc-api.service';\nimport {PlayerComparisonService} from '../../services/player-comparison.service';\nimport {MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {SleeperService} from '../../../services/sleeper.service';\n\n@Component({\n  selector: 'app-add-player-comparison-modal',\n  templateUrl: './add-player-comparison-modal.component.html',\n  styleUrls: ['./add-player-comparison-modal.component.css']\n})\nexport class AddPlayerComparisonModalComponent implements OnInit {\n  playerSearch: string = '';\n\n  filteredList: KTCPlayer[];\n  filterPosGroup: boolean[];\n\n  constructor(private playerService: PlayerService, private ktcApiService: KTCApiService, public playerComparisonService: PlayerComparisonService, private dialog: MatDialog,\n              @Inject(MAT_DIALOG_DATA) public data: { isGroup2: boolean }, public sleeperService: SleeperService) { }\n\n  ngOnInit(): void {\n    this.filterPosGroup = [true, true, true, true, true, false];\n    this.filteredList = this.playerService.playerValues.slice(0,7)\n  }\n\n  addPlayer(player: KTCPlayer) {\n    let addable = true;\n    if(this.playerComparisonService.isGroupMode && this.data.isGroup2) {\n      for(let p of this.playerComparisonService.group2SelectedPlayers) {\n        if(p.id === player.name_id){\n          addable = false;\n        }\n      }\n    } else {\n      for(let p of this.playerComparisonService.selectedPlayers) {\n        if(p.id === player.name_id){\n          addable = false;\n        }\n      }\n    }\n    if(addable) {\n      this.playerComparisonService.isGroupMode ? this.playerComparisonService.addPlayerToCharts(player, this.data.isGroup2) : this.playerComparisonService.addPlayerToCharts(player)\n    }\n  }\n\n  onRemove(player: KTCPlayer, isGroup2: boolean = false) {\n    this.playerComparisonService.onRemove({name: player.full_name, data: [], id: player.name_id}, isGroup2)\n  }\n\n  finishAdding() {\n    this.dialog.closeAll()\n  }\n\n  updatePlayerFilters() {\n    this.filteredList = this.playerService.playerValues.slice(0);\n    const filterOptions = ['QB', 'RB', 'WR', 'TE', 'PI'];\n    if(this.filterPosGroup[5]){\n      this.filteredList = this.filteredList.filter(player => {\n        if (player.experience === 0 && player.position !== 'PI') {\n          return player;\n        }\n      });\n    }\n    for (let i = 0; i < this.filterPosGroup.length; i++) {\n      if (!this.filterPosGroup[i]) {\n        this.filteredList = this.filteredList.filter(player => {\n          if (player.position !== filterOptions[i]) {\n            return player;\n          }\n        });\n      }\n    }\n    if(!this.playerSearch || this.playerSearch === '') {\n      this.filteredList = this.filteredList.slice(0,7)\n    } else {\n      this.filteredList = this.filteredList.filter((player) => {\n        return player.full_name.toLowerCase().includes(this.playerSearch.toLowerCase()) || player.position.toLowerCase().includes(this.playerSearch.toLowerCase())\n          || player.team.toLowerCase().includes(this.playerSearch.toLowerCase()) || (player.owner?.toLowerCase().includes(this.playerSearch.toLowerCase()) && this.sleeperService.selectedLeague);\n      }).slice(0, 7);\n    }\n  }\n}\n","<div class=\"large-bold-header-text center-text margin-bot-20\"> Add/Remove Players</div>\n\n<mat-chip-list\n  *ngIf=\"playerComparisonService.selectedPlayers.length !== 0 && (!playerComparisonService.isGroupMode || (playerComparisonService.isGroupMode && !data.isGroup2))\">\n  <mat-chip *ngFor=\"let player of playerComparisonService.selectedPlayers\"\n            (removed)=\"playerComparisonService.onRemove(player)\">{{player.name}}\n    <mat-icon matChipRemove>cancel</mat-icon>\n  </mat-chip>\n</mat-chip-list>\n\n<mat-chip-list\n  *ngIf=\"playerComparisonService.group2SelectedPlayers.length !== 0 && (playerComparisonService.isGroupMode && data.isGroup2)\">\n  <mat-chip *ngFor=\"let player of playerComparisonService.group2SelectedPlayers\"\n            (removed)=\"playerComparisonService.onRemove(player, true)\">{{player.name}}\n    <mat-icon matChipRemove>cancel</mat-icon>\n  </mat-chip>\n</mat-chip-list>\n\n<div class=\"margin-top-10\">\n  <mat-form-field class=\"mat-dropdown-wide-100-percent\">\n    <mat-label>Search Players by Name, Position, {{sleeperService.selectedLeague ? 'NFL Team, or Fantasy Owner' : 'or NFL Team'}}</mat-label>\n    <input matInput autocomplete=\"off\" type=\"text\" [(ngModel)]=\"playerSearch\" (keyup)=\"updatePlayerFilters()\">\n    <button mat-button *ngIf=\"playerSearch\" matSuffix mat-icon-button aria-label=\"Clear\"\n            (click)=\"playerSearch=''; updatePlayerFilters()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <span>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[0]\"\n                    (change)=\"updatePlayerFilters()\">QB</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[1]\"\n                    (change)=\"updatePlayerFilters()\">RB</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[2]\"\n                    (change)=\"updatePlayerFilters()\">WR</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[3]\"\n                    (change)=\"updatePlayerFilters()\">TE</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[4]\"\n                    (change)=\"updatePlayerFilters()\">Picks</mat-checkbox>\n      <mat-checkbox class=\"player-value-checkbox-margin\" color=\"primary\" [(ngModel)]=\"filterPosGroup[5]\"\n                    (change)=\"updatePlayerFilters()\">Only Rookies</mat-checkbox>\n    </span>\n  <div class=\"margin-top-10\">\n    <div *ngFor=\"let player of filteredList\" (click)=\"addPlayer(player)\"\n         class=\"modal-players-list__item\">{{player.position}} - {{player.full_name}}\n      <span class=\"disabled__color\"> {{player.team}}  {{player.position}}{{player.sf_position_rank}}</span></div>\n  </div>\n</div>\n<br>\n\n\n<button mat-raised-button color=\"accent\" class=\"button-right\" (click)=\"finishAdding()\">Finish</button>\n","<div class=\"table-container\" *ngIf=\"sleeperService.leagueLoaded\">\n  <div class=\"margin-top-10\">\n    <span class=\"link--text__no__underline mid-bold-text\" style=\"padding-right: 3px\" [routerLink]=\"['../../rankings']\">Power Rankings</span>\n    <mat-icon class=\"arrow-icon__nav\">chevron_right</mat-icon>\n    <span class=\"mid-bold-text\">{{selectedTeam.owner.ownerName}}</span>\n    <div class=\"link--text__no__underline mid-bold-text button-right\" [routerLink]=\"['../../playoff/calculator']\">\n      View in Standings\n      <mat-icon class=\"arrow-icon__nav\">chevron_right</mat-icon>\n    </div>\n  </div>\n  <div class=\"flex-start-container margin-top-50\">\n    <div class=\"flex-item-home grid-15\">\n      <div class=\"profile--pic\">\n        <img #image [src]=\"'https://sleepercdn.com/avatars/thumbs/' + selectedTeam.owner.avatar\"\n             (error)=\"image.hidden = true\" [hidden]=\"image.hidden\" class=\"responsive\">\n      </div>\n    </div>\n    <div class=\"flex-item-home grid-70\">\n      <div class=\"large-bold-header-text\">Team {{selectedTeam.owner.teamName}}</div>\n      <br>\n      <div>\n        <span\n          style=\"padding-right: 15px\">Managed by {{selectedTeam.owner.ownerName}}</span>\n      </div>\n      <br>\n      <div class=\"standings-row\">\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">Starter Rank</div>\n          <div class=\"mid-bold-text\">{{powerRankingsService.getRankByTeam(selectedTeam, 'starterRank')}}</div>\n        </div>\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">Overall Rank</div>\n          <div class=\"mid-bold-text\">{{powerRankingsService.getRankByTeam(selectedTeam, 'overallRank')}}</div>\n        </div>\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">Average Points</div>\n          <div class=\"mid-bold-text\">{{getAveragePoints()}}</div>\n        </div>\n        <div class=\"standings-col vertical-break__right__dark\">\n          <div class=\"small-text__light text__light disabled__color\">Points For</div>\n          <div class=\"mid-bold-text\">{{selectedTeam.roster.teamMetrics.fpts}}</div>\n        </div>\n        <div class=\"standings-col\">\n          <div class=\"small-text__light text__light disabled__color\">Max Points For</div>\n          <div class=\"mid-bold-text\">{{selectedTeam.roster.teamMetrics.ppts}}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex-item-home grid-15\">\n      <div class=\"button-right center-text\">\n        <mat-card>\n          <div class=\"text__light\" style=\"padding-right: 10px; padding-left: 10px\">Record</div>\n          <div class=\"large-bold-header-text\">{{selectedTeam.roster.teamMetrics.wins}}-{{selectedTeam.roster.teamMetrics.losses}}</div>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n\n  <mat-tab-group mat-align-tabs=\"center\" class=\"margin-top-25\">\n    <mat-tab label=\"Weekly MatchUps\">\n      <div class=\"mid-bold-text margin-top-10 center-text\">Weekly Points Vs. Opponents</div>\n      <div class=\"margin-top-10 center-text\">Below is the {{sleeperService.selectedYear}} Season match ups vs opponents.\n      </div>\n      <app-fantasy-team-details-weekly-points-chart\n        [selectedTeam]=\"selectedTeam\"></app-fantasy-team-details-weekly-points-chart>\n    </mat-tab>\n    <mat-tab label=\"Roster\">\n      <div class=\"mid-bold-text margin-top-10 center-text\">Team Roster</div>\n      <div class=\"margin-top-10 center-text\">Below are the players sorted by most valuable to least valuable.</div>\n      <div class=\"content\">\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"center\" class=\"margin-top-50\" *ngIf=\"roster.length > 0\">\n          <mat-card fxFlex=\"25%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" class=\"item mat-elevation-z4\" *ngFor=\"let player of roster\">\n            <mat-card-header>\n              <mat-card-title>{{player?.full_name}}</mat-card-title>\n              <mat-card-subtitle class=\"small-text__light\">{{player.position}} {{player.age != -1 ? player.age : '??'}} y.o.</mat-card-subtitle>\n            </mat-card-header>\n            <img mat-card-image #image\n                 [src]=\"'https://sleepercdn.com/content/nfl/players/thumb/' + player?.sleeper_id + '.jpg'\"\n                 (error)=\"image.hidden = true\" [hidden]=\"image.hidden\" style=\"max-width: 300px\" class=\"responsive center-img\">\n            <mat-card-content class=\"center-text\">\n              <div class=\"small-text__light\">Trade Value</div>\n              <div class=\"mid-bold-text\">{{player?.sf_trade_value}}</div>\n            </mat-card-content>\n            <mat-card-actions class=\"center-text\">\n              <button mat-button [routerLink]=\"['../../../players/details', player.name_id]\">Player Details</button>\n              <button mat-button (click)=\"openPlayerComparison(player)\">View Comparison</button>\n            </mat-card-actions>\n          </mat-card>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n\n\n<div class=\"center-text margin-top-50\" *ngIf=\"!sleeperService.leagueLoaded\">\n  <div class=\"warning__alert\">Cannot fetch team information. Please select a league.</div>\n  <br>\n  <button mat-raised-button color=\"warn\" routerLink=\"./home\">Choose League</button>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {SleeperService} from '../../services/sleeper.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PlayoffCalculatorService} from '../services/playoff-calculator.service';\nimport {SleeperTeam} from '../../model/SleeperLeague';\nimport {MatchupService} from '../services/matchup.service';\nimport {PowerRankingsService} from '../services/power-rankings.service';\nimport {PlayerService} from '../../services/player.service';\nimport {KTCPlayer} from '../../model/KTCPlayer';\nimport {PlayerComparisonService} from '../services/player-comparison.service';\n\n@Component({\n  selector: 'app-fantasy-team-details',\n  templateUrl: './fantasy-team-details.component.html',\n  styleUrls: ['./fantasy-team-details.component.css']\n})\nexport class FantasyTeamDetailsComponent implements OnInit {\n\n  selectedTeam: SleeperTeam;\n\n  roster: KTCPlayer[] = [];\n\n  constructor(public sleeperService: SleeperService, private route: ActivatedRoute, public powerRankingsService: PowerRankingsService, public playerService: PlayerService, private playerComparisonService: PlayerComparisonService, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    const ownerName = this.route.snapshot.paramMap.get('ownerName');\n\n    if (this.sleeperService.leagueLoaded) {\n      const teamIndex = this.sleeperService.sleeperTeamDetails.map(e => e.owner.ownerName).indexOf(ownerName);\n      this.selectedTeam = this.sleeperService.sleeperTeamDetails[teamIndex];\n      this.powerRankingsService.mapPowerRankings(this.sleeperService.sleeperTeamDetails, this.playerService.playerValues)\n      for(let sleeperId of this.selectedTeam.roster.players) {\n        const player = this.playerService.getPlayerBySleeperId(sleeperId)\n        if(player) {\n          this.roster.push(player)\n        }\n      }\n      this.roster.sort((a,b) => {\n        if(this.sleeperService.selectedLeague.isSuperflex) {\n          return b.sf_trade_value - a.sf_trade_value;\n        } else {\n          return b.trade_value - a.trade_value;\n        }\n      })\n    }\n  }\n\n  getAveragePoints() {\n    return Math.round(this.selectedTeam.roster.teamMetrics.fpts/(this.sleeperService.selectedLeague.playoffStartWeek - this.sleeperService.selectedLeague.startWeek));\n  }\n\n  openPlayerComparison(selectedPlayer: KTCPlayer) {\n    this.playerComparisonService.addPlayerToCharts(selectedPlayer);\n    this.router.navigateByUrl('players/comparison')\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {KTCPlayer} from '../../../model/KTCPlayer';\nimport {PlayerService} from '../../../services/player.service';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-player-details-weekly-box-scores-table',\n  templateUrl: './player-details-weekly-box-scores-table.component.html',\n  styleUrls: ['./player-details-weekly-box-scores-table.component.css']\n})\nexport class PlayerDetailsWeeklyBoxScoresTableComponent implements OnInit {\n\n  @Input()\n  selectedPlayer: KTCPlayer;\n\n  generalBoxScore = ['week', 'points', 'off_snp']\n\n  passingBoxScore = ['pass_att', 'pass_cmp', 'pass_yd', 'pass_td', 'pass_int'];\n\n  rushingBoxScore = ['rush_att', 'rush_yd', 'rush_ypa', 'rush_td'];\n\n  sackBoxScore = ['pass_sack', 'pass_sack_yds']\n\n  turnoverBoxScore = ['fum', 'fum_lost']\n\n  receivingBoxScore = ['rec', 'rec_tgt', 'rec_yd', 'rec_ypr', 'rec_td', 'rec_rz_tgt'];\n\n  displayedColumns: string[] = [];\n\n  playerWeeklyStats = [];\n\n  datasource: MatTableDataSource<any[]> = new MatTableDataSource<any[]>();\n\n  constructor(private playerService: PlayerService) { }\n\n  ngOnInit(): void {\n    this.setDisplayColumns()\n    for(let i = 1; i < 19;i++) {\n      const weekStats = this.playerService.pastSeasonWeeklyStats[i];\n      this.playerWeeklyStats.push(weekStats[this.selectedPlayer.sleeper_id]);\n    }\n    this.datasource = new MatTableDataSource<any>(this.playerWeeklyStats)\n  }\n\n  private setDisplayColumns() {\n    switch (this.selectedPlayer.position){\n      case 'QB':\n        this.displayedColumns = this.displayedColumns.concat(this.generalBoxScore, this.passingBoxScore, this.rushingBoxScore, this.sackBoxScore, this.turnoverBoxScore)\n        break;\n      case 'RB':\n        this.displayedColumns = this.displayedColumns.concat(this.generalBoxScore, this.rushingBoxScore, this.receivingBoxScore, this.turnoverBoxScore)\n        break;\n      case 'WR':\n        this.displayedColumns = this.displayedColumns.concat(this.generalBoxScore, this.receivingBoxScore, this.turnoverBoxScore)\n        break;\n      default:\n        this.displayedColumns = this.displayedColumns.concat(this.generalBoxScore, this.receivingBoxScore, this.turnoverBoxScore)\n    }\n  }\n\n  getDisplayWeek(i: number): string {\n    return this.playerService.getWeekByIndex(i+1).slice(5);\n  }\n}\n","<div class=\"margin-top-50\">\n  <mat-table [dataSource]=\"datasource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"week\">\n      <mat-header-cell *matHeaderCellDef>Week</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog; let i = index\">{{getDisplayWeek(i)}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"points\">\n      <mat-header-cell *matHeaderCellDef>Fantasy Points</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pts_half_ppr || '---'}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"off_snp\">\n      <mat-header-cell *matHeaderCellDef>Off Snp %</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.off_snp || gamelog?.snp || 0}}%</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_att\">\n      <mat-header-cell *matHeaderCellDef>Pass Att</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_att || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_cmp\">\n      <mat-header-cell *matHeaderCellDef>Pass Cmp</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_cmp || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_yd\">\n      <mat-header-cell *matHeaderCellDef>Pass Yards</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_yd || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_td\">\n      <mat-header-cell *matHeaderCellDef>Pass TDs</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_td || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_int\">\n      <mat-header-cell *matHeaderCellDef>Pass Ints</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_int || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rush_att\">\n      <mat-header-cell *matHeaderCellDef>Rush Att</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rush_att || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rush_yd\">\n      <mat-header-cell *matHeaderCellDef>Rush Yds</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rush_yd || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rush_ypa\">\n      <mat-header-cell *matHeaderCellDef>Rush YPA</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rush_ypa || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rush_td\">\n      <mat-header-cell *matHeaderCellDef>Rush TDs</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rush_td || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_sack\">\n      <mat-header-cell *matHeaderCellDef>Sacks</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_sack || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"pass_sack_yds\">\n      <mat-header-cell *matHeaderCellDef>Sack Yds</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.pass_sack_yds || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fum\">\n      <mat-header-cell *matHeaderCellDef>Fumbles</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.fum || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fum_lost\">\n      <mat-header-cell *matHeaderCellDef>Fumbles Lost</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.fum_lost || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rec\">\n      <mat-header-cell *matHeaderCellDef>Rec</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rec || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rec_tgt\">\n      <mat-header-cell *matHeaderCellDef>Rec Targets</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rec_tgt || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rec_yd\">\n      <mat-header-cell *matHeaderCellDef>Rec Yd</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rec_yd || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rec_ypr\">\n      <mat-header-cell *matHeaderCellDef>Rec YPR</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rec_ypr || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rec_td\">\n      <mat-header-cell *matHeaderCellDef>Rec TD</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rec_td || 0}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"rec_rz_tgt\">\n      <mat-header-cell *matHeaderCellDef>Rec RZ T</mat-header-cell>\n      <mat-cell *matCellDef=\"let gamelog\">{{gamelog?.rec_rz_tgt || 0}}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row class=\"box-score-element-row\" *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n\n</div>\n","import {DraftCapital} from './SleeperUser';\r\nimport set = Reflect.set;\r\n\r\nexport class TeamMetrics {\r\n\r\n  constructor(settings: any) {\r\n    this.wins = settings.wins || 0;\r\n    this.waiverPosition = settings.waiver_position || 0;\r\n    this.ppts = settings.ppts + (settings.ppts_decimal / 100) || 0;\r\n    this.losses = settings.losses || 0;\r\n    this.fpts = settings.fpts + (settings.fpts_decimal / 100) || 0;\r\n    this.fptsAgainst = settings.fpts_against + (settings.fpts_against_decimal / 100) || 0;\r\n    this.division = settings.division || 0;\r\n    this.ties = settings.ties || 0;\r\n    this.rank = settings.rank || 0;\r\n  }\r\n\r\n\r\n  wins: number;\r\n  waiverPosition: number;\r\n  rank: number;\r\n  ppts: number;\r\n  losses: number;\r\n  ties: number\r\n  fptsAgainst: number;\r\n  fpts: number;\r\n  division: number;\r\n}\r\n\r\nexport class SleeperRosterData {\r\n  constructor(roster_id: string, owner_id: string, players: string[], settings: TeamMetrics) {\r\n    this.rosterId = roster_id;\r\n    this.ownerId = owner_id;\r\n    this.players = players;\r\n    this.teamMetrics = settings;\r\n  }\r\n\r\n  rosterId: string;\r\n  ownerId: string;\r\n  players: string[];\r\n  teamMetrics: TeamMetrics;\r\n}\r\n\r\nexport class SleeperOwnerData {\r\n  constructor(user_id: string, display_name: string, team_name: string, avatar: string) {\r\n    this.userId = user_id;\r\n    this.ownerName = display_name;\r\n    this.teamName = team_name || display_name;\r\n    this.avatar = avatar;\r\n  }\r\n\r\n  ownerName: string;\r\n  teamName: string;\r\n  userId: string;\r\n  avatar: string;\r\n}\r\n\r\nexport class SleeperTeam {\r\n  constructor(owner: SleeperOwnerData, roster: SleeperRosterData) {\r\n    this.owner = owner;\r\n    this.roster = roster;\r\n  }\r\n\r\n  owner: SleeperOwnerData;\r\n  roster: SleeperRosterData;\r\n  draftCapital: DraftCapital[] = [];\r\n}\r\n\r\nexport class SleeperRawDraftOrderData {\r\n  constructor(draft_id: string, league_id: string, status: string, type: string, draft_order: any, slot_to_roster_id: any, year: string, settings: any) {\r\n    this.draftId = draft_id;\r\n    this.leagueId = league_id;\r\n    this.status = status;\r\n    this.type = type;\r\n    this.draftOrder = draft_order;\r\n    this.slotToRosterId = slot_to_roster_id;\r\n    this.rounds = settings.rounds;\r\n    this.season = year;\r\n    this.playerType = settings.player_type;\r\n  }\r\n\r\n  draftOrder: any;\r\n  slotToRosterId: any;\r\n  leagueId: string;\r\n  draftId: string;\r\n  status: string;\r\n  type: string;\r\n  rounds: number;\r\n  season: string;\r\n  playerType: number;\r\n}\r\n\r\nexport class SleeperRawTradePicksData {\r\n  constructor(owner_id: number, previous_owner_id: number, roster_id: number, round: number, season: string) {\r\n    this.ownerId = owner_id;\r\n    this.previousOwnerId = previous_owner_id;\r\n    this.rosterId = roster_id;\r\n    this.round = round;\r\n    this.season = season;\r\n  }\r\n\r\n  ownerId: number;\r\n  previousOwnerId: number;\r\n  rosterId: number;\r\n  round: number;\r\n  season: string;\r\n}\r\n\r\nexport class SleeperTeamMatchUpData {\r\n  constructor(matchup: any) {\r\n    this.starterPoints = matchup.starters_points;\r\n    this.starters = matchup.starters;\r\n    this.rosterId = matchup.roster_id;\r\n    this.points = matchup.points;\r\n    this.players = matchup.players;\r\n    this.matchupId = matchup.matchup_id;\r\n    this.customPoints = matchup.custom_points;\r\n  }\r\n\r\n  starterPoints: string[];\r\n  starters: string[];\r\n  rosterId: number;\r\n  points: number;\r\n  players: string[];\r\n  matchupId: number;\r\n  customPoints: number;\r\n}\r\n\r\nexport class SleeperCompletedPickData {\r\n\r\n  constructor(pick: any) {\r\n    this.round = pick.round;\r\n    this.draftSlot = pick.draft_slot;\r\n    this.sleeperId = pick.player_id;\r\n    this.isKeeper = pick.is_keeper;\r\n    this.rosterId = pick.roster_id;\r\n    this.pickNumber = pick.pick_no;\r\n    this.draftId = pick.draft_id;\r\n    this.firstName = pick.metadata.first_name;\r\n    this.lastName = pick.metadata.last_name;\r\n    this.position = pick.metadata.position;\r\n  }\r\n\r\n  round: number;\r\n  rosterId: number;\r\n  sleeperId: string;\r\n  pickNumber: number;\r\n  isKeeper: boolean;\r\n  draftSlot: number;\r\n  draftId: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  position: string;\r\n}\r\n\r\nexport class SleeperStateOfNFL {\r\n  constructor(season: any) {\r\n    this.week = season.week;\r\n    this.season = season.season;\r\n    this.previousSeason = season.previous_season;\r\n    this.seasonType = season.season_type;\r\n  }\r\n\r\n  week: number;\r\n  season: string;\r\n  previousSeason: string;\r\n  seasonType: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {PlayerService} from '../../services/player.service';\nimport {BaseComponent} from '../base-component.abstract';\nimport {KTCPlayer} from '../../model/KTCPlayer';\nimport {KTCApiService} from '../../services/api/ktc-api.service';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {SleeperService} from '../../services/sleeper.service';\n\n@Component({\n  selector: 'app-player-values',\n  templateUrl: './player-values.component.html',\n  styleUrls: ['./player-values.component.css']\n})\nexport class PlayerValuesComponent extends BaseComponent implements OnInit {\n\n  playersLoaded: boolean;\n\n  constructor(public playerService: PlayerService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.playersLoaded = (this.playerService.playerValues.length > 0)\n    this.playerService.loadPlayerValuesForToday()\n    this.addSubscriptions(this.playerService.$currentPlayerValuesLoaded.subscribe(() => {\n      this.playersLoaded = true;\n    }))\n  }\n\n}\n","<div class=\"margin-top-10 large-bold-header-text center-text\">Today's Player Values</div>\n<div class=\"center-text margin-top-10\">\n  Player values are scraped from <a class=\"info__alert\" href=\"https://keeptradecut.com/\" target=\"_blank\">KeepTradeCut.com</a> dynasty rankings calculated from over <span class=\"info__alert\">600,000+</span> data points.\n  <div>The scoring is <span class=\"info__alert\">0.5 PPR</span>, the table below will update depending on whether your league is Superflex or not.</div>\n</div>\n\n<div class=\"margin-top-25\">\n  <app-ktc-table *ngIf=\"playersLoaded\" [players]=\"playerService.playerValues\"></app-ktc-table>\n</div>\n","import {KTCPlayer} from '../../model/KTCPlayer';\r\nimport {SleeperTeam} from '../../model/SleeperLeague';\r\nimport {DraftCapital} from '../../model/SleeperUser';\r\n\r\nexport class TeamPowerRanking {\r\n  constructor(team: SleeperTeam, players: PositionPowerRanking[], sfTradeValue: number, tradeValue: number, picks: PositionPowerRanking) {\r\n    this.team = team;\r\n    this.roster = players;\r\n    this.sfTradeValueOverall = sfTradeValue;\r\n    this.tradeValueOverall = tradeValue;\r\n    this.picks = picks;\r\n  }\r\n\r\n  team: SleeperTeam;\r\n  roster: PositionPowerRanking[]\r\n  picks: PositionPowerRanking;\r\n  starters: KTCPlayer[] = [];\r\n  sfTradeValueOverall: number = 0;\r\n  tradeValueOverall: number = 0;\r\n  overallRank: number;\r\n  starterRank: number;\r\n  sfTradeValueStarter: number = 0;\r\n  tradeValueStarter: number = 0;\r\n}\r\n\r\nexport class PositionPowerRanking {\r\n  constructor(pos: string, sfTradeValue: number, tradeValue: number, groupList: KTCPlayer[]) {\r\n    this.sfTradeValue = sfTradeValue;\r\n    this.tradeValue = tradeValue;\r\n    this.players = groupList;\r\n    this.position = pos;\r\n  }\r\n\r\n  rank: number;\r\n  position: string;\r\n  sfTradeValue: number;\r\n  tradeValue: number;\r\n  players: KTCPlayer[];\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}